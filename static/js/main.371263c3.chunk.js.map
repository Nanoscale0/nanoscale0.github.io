{"version":3,"sources":["comp/block.tsx","style/color.ts","style/articleStyle.ts","comp/article-block.tsx","comp/loading.tsx","comp/page-nav.tsx","page/homepage.tsx","comp/footer.tsx","comp/header/toc.tsx","comp/header/left-menu.tsx","comp/round-btn.tsx","comp/header/top-bar.tsx","comp/header/header.tsx","comp/article.tsx","comp/hover-page.tsx","page/article-page.tsx","comp/frame.tsx","serviceWorker.ts","index.tsx"],"names":["blockStyle","css","Block","this","props","children","React","Component","color","highlight","grey","lightGrey","red","articleStyle","ArticleBlock","onClick","articleName","title","source","description","escapeHtml","titleStyle","Title","event","preventDefault","undefined","href","Loading","outerAnimation","keyframes","innerAnimation","loadingStyle","show","PageNav","toPageNumber","page","toPreviousPage","currentPage","toNextPage","totalPage","prev","next","num","i","url","toString","selected","PageNumber","numberStyle","Homepage","state","pageNumber","articleList","openArticle","name","updateContent","length","fetch","then","res","json","setState","OverlayScrollbars","document","querySelectorAll","scrollbars","autoHide","componentDidMount","componentDidUpdate","list","map","item","key","fileName","className","footerStyle","Footer","TOC","linkOnClick","hoverPage","hoverPageInner","querySelector","console","log","target","history","replace","id","decodeURI","hash","offsetTop","getElementById","scrollTop","toggleLeftMenu","tocStyle","tocbot","init","tocSelector","contentSelector","headingSelector","hasInnerContainers","LeftMenu","leftMenuStyle","left","transition","innerStyle","roundButtonStyle","RoundButton","btnRef","createRef","detail","activeElement","current","blur","ref","TopBar","menuOnClick","navOnClick","toPage","topBarContainerStyle","hide","topBarInnerStyle","topBarItemContainerStyle","leftMenuLeft","itemStyle","Item","menuButtonStyle","MenuButton","spanStyle","width","body","clientWidth","progress","Math","abs","Header","onResize","window","onresize","touchStart","addEventListener","touchMove","touchEnd","changedTouches","clientX","forceUpdate","removeEventListener","swipeAreaStyle","hideTopBar","onTouchStart","Article","content","head","text","data","getHead","getContent","headings","forEach","element","textContent","refresh","loadOver","titleContainerStyle","getInfo","hover","coverStyle","Helmet","ex","exec","label","re","rp","info","HoverPage","display","opacity","scale","close","hideHoverPage","back","push","location","setTimeout","hoverPageStyle","shadowStyle","closeButtonStyle","options","picUrl","ArticlePage","jumpToAnchor","viewport","createBrowserHistory","initialPage","initialPageData","router","Frame","urlChanged","showHoverPage","contentOuterStyle","contentInnerStyle","lang","styles","Switch","indexOf","a","split","pathname","startsWith","parseInt","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.371263c3.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\n\r\nconst blockStyle = css`\r\n  position: relative;\r\n  border: 1px solid rgba(0,0,0,0.05);\r\n  margin: 30px 0;\r\n  background: #FFF;\r\n  outline: 3px solid transparent;\r\n  transition: 300ms;\r\n  @media screen and (min-width: 1400px) {\r\n    &:nth-of-type(odd) {\r\n      transform: translateX(10px);\r\n    }\r\n    &:nth-of-type(even) {\r\n      transform: translateX(-10px);\r\n    }\r\n    &:only-of-type {\r\n      transform: none;\r\n    }\r\n  }\r\n  &:only-of-type {\r\n    border: none;\r\n    outline: 3px solid #000;\r\n  }\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      outline: 3px solid #000;\r\n    }\r\n  }\r\n`\r\n\r\nexport default class Block extends React.Component {\r\n  render() {\r\n    return(\r\n      <div css={blockStyle}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}","const color = {\r\n    highlight: \"#1A0DAB\",\r\n    grey: \"#4C4C4C\",\r\n    lightGrey: \"#F3F4F5\",\r\n    red: \"#FF0000\"\r\n}\r\n\r\nexport default color","import { css } from '@emotion/core';\r\nimport color from './color';\r\n\r\nconst articleStyle = css`\r\n  position: relative;\r\n  z-index: 1;\r\n  font-size: 18px;\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  pre {\r\n    background: ${color.lightGrey};\r\n    padding: 15px;\r\n    font-size: 0.8em;\r\n    overflow: auto;\r\n  }\r\n  code {\r\n    font-family: 'Courier Prime', 'Source Han Sans Old Style', monospace;\r\n  }\r\n  blockquote {\r\n    position: relative;\r\n    width: calc(100% + 40px);\r\n    left: -20px;\r\n    background: #000;\r\n    margin: 30px 0;\r\n    padding: 5px 40px;\r\n    box-sizing: border-box;\r\n    color: #FFF;\r\n    font-size: 0.8em;\r\n    font-weight: 200;\r\n    letter-spacing: 2px;\r\n    &::before {\r\n      content: \"\\\\e634\";\r\n      font-family: 'iconfont';\r\n      position: absolute;\r\n      font-size: 40px;\r\n      top: -25px;\r\n      left: 10px;\r\n      text-shadow:\r\n        -1px -1px 0 #000,  \r\n        1px -1px 0 #000,\r\n        -1px  1px 0 #000,\r\n        2px  2px 0 #000;\r\n    }\r\n    &::after {\r\n      content: \"\\\\e635\";\r\n      font-family: 'iconfont';\r\n      position: absolute;\r\n      font-size: 40px;\r\n      bottom: -25px;\r\n      right: 10px;\r\n      text-shadow:\r\n        -1px -1px 0 #000,  \r\n        1px -1px 0 #000,\r\n        -1px  1px 0 #000,\r\n        2px  2px 0 #000;\r\n    }\r\n    a {\r\n      color: #FFF;\r\n      text-shadow: .03em 0 #000, -.03em 0 #000, 0 .03em #000, 0 -.03em #000, .06em 0 #000, -.06em 0 #000, .09em 0 #000, -.09em 0 #000, .12em 0 #000, -.12em 0 #000, .15em 0 #000, -.15em 0 #000;\r\n      background-image: linear-gradient(#000, #000), linear-gradient(#000, #000), linear-gradient(#FFF, #FFF);\r\n    }\r\n  }\r\n  a {\r\n    color: #000;\r\n    text-decoration: none;\r\n    text-shadow: .03em 0 #FFF, -.03em 0 #FFF, 0 .03em #FFF, 0 -.03em #FFF, .06em 0 #FFF, -.06em 0 #FFF, .09em 0 #FFF, -.09em 0 #FFF, .12em 0 #FFF, -.12em 0 #FFF, .15em 0 #FFF, -.15em 0 #FFF;\r\n    background-image: linear-gradient(#FFF, #FFF), linear-gradient(#FFF, #FFF), linear-gradient(#000, #000);\r\n    background-size: .05em 1px, .05em 1px, 1px 1px;\r\n    background-repeat: no-repeat, no-repeat, repeat-x;\r\n    background-position: 0% 90%, 100% 90%, 0% 90%;\r\n    -webkit-tap-highlight-color: transparent;\r\n    &::selection {\r\n      text-shadow: none;\r\n      /* background-image: linear-gradient(#000, #000), linear-gradient(#000, #000), linear-gradient(#FFF, #FFF); */\r\n    }\r\n    &:active {\r\n      background-color: rgba(0,0,0,0.2);\r\n      border-radius: 3px;\r\n      text-shadow: none;\r\n    }\r\n  }\r\n  h2 {\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 0;\r\n    &::before {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: calc(100% + 30px);\r\n      height: 3px;\r\n      left: -20px;\r\n      bottom: 0px;\r\n      background: #000;\r\n    }\r\n  }\r\n  emphasis {\r\n    text-emphasis: filled;\r\n    -webkit-text-emphasis: filled;\r\n  }\r\n  h1,h2,h3,h4 {\r\n    scroll-margin-top: 40px;\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport default articleStyle;","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Block from './block';\r\nimport articleStyle from '../style/articleStyle';\r\n\r\ntype articleBlockProps = {\r\n  title?: string;\r\n  onClick: Function;\r\n  articleName: string;\r\n  description: string;\r\n};\r\n\r\nexport default class ArticleBlock extends React.Component<articleBlockProps> {\r\n  render() {\r\n    return(\r\n      <Block>\r\n        <div css={css`margin: 20px;`}>\r\n          <Title title={this.props.title} onClick={this.onClick} articleName={this.props.articleName} />\r\n          <ReactMarkdown source={this.props.description} escapeHtml={false} css={articleStyle}/>\r\n        </div>\r\n      </Block>\r\n    )\r\n  }\r\n  onClick = () => {\r\n    this.props.onClick(this.props.articleName);\r\n  }\r\n};\r\n\r\ntype titleProps = {\r\n    title?: string;\r\n    onClick?: Function;\r\n    articleName: string;\r\n};\r\n\r\nconst titleStyle = css`\r\n    display: inline-block;\r\n    z-index: 1;\r\n    position: relative;\r\n    text-decoration: none;\r\n    color: #000;\r\n    cursor: pointer;\r\n    -webkit-tap-highlight-color: transparent;\r\n    transition: 200ms;\r\n    &::after {\r\n        content: \"\";\r\n        z-index: -1;\r\n        position: absolute;\r\n        top: -4px;\r\n        left: -30px;\r\n        width: 0;\r\n        height: 100%;\r\n        transition: width 300ms, background 200ms;\r\n        background: #000;\r\n    }\r\n    @media (any-hover: hover) {\r\n        &:hover {\r\n            color: #FFF;\r\n            &::after {\r\n                width: calc(100% + 50px);\r\n            }\r\n        }\r\n    }\r\n    &:active {\r\n        color: #FFF;\r\n        &::after {\r\n            width: calc(100% + 50px);\r\n        }\r\n    }\r\n    h1 {\r\n        margin: 0 0 10px 0px;\r\n        font-size: 1.7em;\r\n    }\r\n`\r\n\r\nclass Title extends React.Component<titleProps> {\r\n    render() {\r\n        return(\r\n            <a href={`/article/${this.props.articleName}/`} css={titleStyle} onClick={this.onClick}>\r\n                <h1>{this.props.title}</h1>\r\n            </a>\r\n        )\r\n    }\r\n    onClick = (event: any) => {\r\n        event.preventDefault();\r\n        if (this.props.onClick !== undefined) this.props.onClick();\r\n    }\r\n};","/** @jsx jsx */\r\nimport { jsx, css, keyframes } from '@emotion/core';\r\nimport React from 'react';\r\nimport color from '../style/color';\r\n\r\ntype props = {\r\n    show?: boolean;\r\n}\r\n\r\nexport default class Loading extends React.Component<props> {\r\n    render() {\r\n        const outerAnimation = keyframes`\r\n            from {\r\n                transform: rotate(0)\r\n            }\r\n            40% {\r\n                transform: rotate(0)\r\n            }\r\n            50% {\r\n                transform: rotate(-180deg)\r\n            }\r\n            90% {\r\n                transform: rotate(-180deg)\r\n            }\r\n            100% {\r\n                transform: rotate(-360deg)\r\n            }\r\n        `\r\n\r\n        const innerAnimation = keyframes`\r\n            from {\r\n                height: 40px\r\n            }\r\n            40% {\r\n                height: 0px\r\n            }\r\n            50% {\r\n                height: 40px\r\n            }\r\n            90% {\r\n                height: 0px\r\n            }\r\n            100% {\r\n                height: 40px\r\n            }\r\n        `\r\n\r\n        const loadingStyle = css`\r\n            position: absolute;\r\n            display: ${!this.props.show? \"none\" : \"block\"};\r\n            left: calc(50% - 25px);\r\n            top: calc(50% - 25px);\r\n            width: 50px;\r\n            height: 50px;\r\n            background: #000;\r\n            animation: ${outerAnimation} 4s ease infinite;\r\n            &::after {\r\n                content: \"\";\r\n                position: absolute;\r\n                left: 5px;\r\n                top: 5px;\r\n                height: 40px;\r\n                width: 40px;\r\n                background: ${color.highlight};\r\n                animation: ${innerAnimation} 4s ease infinite;\r\n            }\r\n        `\r\n\r\n        return(\r\n            <div css={loadingStyle}></div>\r\n        )\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React from 'react';\r\n\r\ninterface navProps {\r\n  toPageNumber: Function;\r\n  currentPage: number;\r\n  totalPage: number;\r\n  show?: boolean;\r\n  url: string;\r\n}\r\n\r\nexport default class PageNav extends React.Component<navProps> {\r\n  render() {\r\n    let prev, next;\r\n    if (this.props.currentPage - 1 >= 1) {\r\n      prev = true;\r\n    }\r\n    if (this.props.currentPage + 1 <= this.props.totalPage) {\r\n      next = true;\r\n    }\r\n\r\n    let num = [0,0,0,0,0];\r\n    if (this.props.currentPage - 2 >= 1) {\r\n      num[0] = this.props.currentPage - 2;\r\n    } else if (this.props.currentPage - 1 >= 1) { \r\n      num[0] = this.props.currentPage - 1;\r\n    } else {\r\n      num[0] = this.props.currentPage;\r\n    }\r\n\r\n    for (let i=1; i<5; i++) {\r\n      if (num[i-1] + 1 <= this.props.totalPage) {\r\n        num[i] = num[i-1] + 1;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div css={css`display: ${this.props.totalPage === 0? \"none\" : \"block\"}; width: 100%; text-align: center;`}>\r\n        <div css={css`display: inline-block;`}>\r\n          <PageNumber num={\"<\"} onClick={this.toPreviousPage} url={prev? this.props.url + \"page/\" + (this.props.currentPage - 1) : \"\"} />\r\n          <PageNumber num={num[0].toString()} onClick={()=>{this.toPageNumber(num[0])}} url={this.props.url + \"page/\" + num[0]} selected={this.props.currentPage === num[0]? true : false} />\r\n          <PageNumber num={num[1].toString()} onClick={()=>{this.toPageNumber(num[1])}} url={this.props.url + \"page/\" + num[1]} selected={this.props.currentPage === num[1]? true : false} />\r\n          <PageNumber num={num[2].toString()} onClick={()=>{this.toPageNumber(num[2])}} url={this.props.url + \"page/\" + num[2]} selected={this.props.currentPage === num[2]? true : false}/>\r\n          <PageNumber num={num[3].toString()} onClick={()=>{this.toPageNumber(num[3])}} url={this.props.url + \"page/\" + num[3]} selected={this.props.currentPage === num[3]? true : false} />\r\n          <PageNumber num={num[4].toString()} onClick={()=>{this.toPageNumber(num[4])}} url={this.props.url + \"page/\" + num[4]} selected={this.props.currentPage === num[4]? true : false} />\r\n          <PageNumber num={\">\"} onClick={this.toNextPage} url={next? this.props.url + \"page/\" + (this.props.currentPage + 1) : \"\"} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  toPageNumber = (page: number) => {\r\n    if (page !== 0) {\r\n      this.props.toPageNumber(page);\r\n    }\r\n  }\r\n  toPreviousPage = () => {\r\n    if (this.props.currentPage - 1 >= 1) {\r\n      this.props.toPageNumber(this.props.currentPage - 1);\r\n    }\r\n  }\r\n  toNextPage = () => {\r\n    if (this.props.currentPage + 1 <= this.props.totalPage) {\r\n      this.props.toPageNumber(this.props.currentPage + 1);\r\n    }\r\n  }\r\n}\r\n\r\ninterface numProps {\r\n  num: string;\r\n  selected?: boolean;\r\n  onClick?: Function;\r\n  url?: string;\r\n}\r\n\r\nclass PageNumber extends React.Component<numProps> {\r\n  render() {\r\n    const numberStyle = css`\r\n      display: ${this.props.num === \"0\"? \"none\" : \"inline-block\"};\r\n      padding: 0 10px;\r\n      text-align: center;\r\n      color: ${this.props.selected? \"#000\" : \"#FFF\"};\r\n      -webkit-text-stroke: ${this.props.selected? \"0px\" : \"2px\"} #000;  \r\n      -webkit-text-fill-color : ${this.props.selected? \"#000\" : \"transparent\"};\r\n      -webkit-tap-highlight-color: transparent;\r\n      font-weight: bold;\r\n      font-size: 50px;\r\n      text-decoration: none;\r\n      user-select: none;\r\n      &:nth-of-type(odd) {\r\n        transform: translateY(5px);\r\n      }\r\n      &:nth-of-type(even) {\r\n        transform: translateY(-5px);\r\n      }\r\n      @media (any-hover: hover) {\r\n        &:hover {\r\n          -webkit-text-stroke: 0px;  \r\n          -webkit-text-fill-color : #000;\r\n        }\r\n      }\r\n      &:active {\r\n        -webkit-text-stroke: 0px;  \r\n        -webkit-text-fill-color : #000;\r\n      }\r\n    `\r\n    return(\r\n      <a href={this.props.url} css={numberStyle} onClick={this.onClick}>{this.props.num}</a>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    event.preventDefault();\r\n    if (this.props.onClick !== undefined) {\r\n      this.props.onClick();\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport ArticleBlock from '../comp/article-block';\r\nimport Loading from '../comp/loading';\r\nimport PageNav from '../comp/page-nav';\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\n\r\ntype homepageProps = {\r\n  openArticle: Function;\r\n  toPageNumber: Function;\r\n  pageNumber: number;\r\n}\r\n\r\nexport default class Homepage extends React.Component<homepageProps> {\r\n  state = {\r\n    pageNumber: this.props.pageNumber,\r\n    articleList: [],\r\n    totalPage: 0\r\n  }\r\n  render() {\r\n    let list = null;\r\n    if (this.state.articleList !== []) {\r\n      list = this.state.articleList.map((item: any) => (\r\n        <ArticleBlock key={item.fileName} title={item.title} articleName={item.fileName} description={item.description} onClick={this.openArticle} />\r\n      ))\r\n    }\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Loading show={this.state.articleList.length === 0? true : false} />\r\n        {list}\r\n        <PageNav currentPage={this.state.pageNumber} toPageNumber={this.props.toPageNumber} totalPage={this.state.totalPage} url={\"/\"} />\r\n      </div>\r\n    )\r\n  }\r\n  openArticle = (name: string) => {\r\n    this.props.openArticle(name);\r\n  }\r\n  updateContent = () => {\r\n    if (this.state.articleList.length === 0 && this.state.pageNumber !== undefined) {\r\n      fetch(\"/source/homepage/\" + this.state.pageNumber + \".json\")\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((json) => {\r\n          this.setState({articleList: json}, ()=>{OverlayScrollbars(document.querySelectorAll(\"pre\"), { scrollbars: { autoHide: 'scroll' } });})\r\n        })\r\n\r\n      fetch(\"/source/homepage/homepage.json\")\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((json) => {\r\n          this.setState({totalPage: json.page})\r\n        })\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    this.updateContent();\r\n  }\r\n  componentDidUpdate = () => {\r\n    this.updateContent();\r\n  }\r\n  static getDerivedStateFromProps(props: homepageProps, state: any) {\r\n    const {pageNumber} = props;\r\n    if (pageNumber !== state.pageNumber) {\r\n      return {pageNumber: pageNumber, articleList: []};\r\n    }\r\n    return null;\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport color from '../style/color';\r\n\r\nconst footerStyle = css`\r\n    max-width: 1300px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    color: ${color.grey};\r\n`\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div css={footerStyle}>\r\n                © 2020 Nanoscale\r\n            </div>\r\n        )\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport tocbot from 'tocbot';\r\nimport { BrowserHistory } from 'history';\r\n\r\ntype props = {\r\n  hoverPage: boolean,\r\n  toggleLeftMenu: Function,\r\n  history: BrowserHistory\r\n}\r\n\r\nexport default class TOC extends React.Component<props> {\r\n  render() {\r\n    const tocStyle = css`\r\n      margin-left: 10px;\r\n      font-size: 30px;\r\n      ol {\r\n        margin: 15px 0;\r\n        padding-inline-start: 20px;\r\n      }\r\n      li {\r\n        margin: 10px 0;\r\n        font-size: 0.9em;\r\n        &::marker {\r\n          color: rgba(0,0,0,0.5);\r\n        }\r\n      }\r\n      a {\r\n        color: #000;\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n      }\r\n    `\r\n\r\n    return(\r\n      <div className=\"toc\" css={tocStyle}>\r\n\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    tocbot.init({\r\n      tocSelector: '.toc',\r\n      contentSelector: '.article-content',\r\n      headingSelector: 'h1, h2, h3, h4',\r\n      hasInnerContainers: true,\r\n      onClick: this.linkOnClick\r\n    });\r\n  }\r\n  linkOnClick = (event: any) => {\r\n    if (this.props.hoverPage) {\r\n      event.preventDefault();\r\n      let hoverPageInner = document.querySelector(\".hover-page-inner .os-viewport\");\r\n      console.log(event.target.href);\r\n      this.props.history.replace(event.target.href);\r\n      let id = decodeURI(event.target.hash.replace(\"#\", \"\"));\r\n      let offsetTop = document.getElementById(id)?.offsetTop;\r\n      if (hoverPageInner) hoverPageInner.scrollTop = offsetTop! - 40;\r\n    }\r\n    this.props.toggleLeftMenu();\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport TOC from './toc';\r\nimport { BrowserHistory } from 'history';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\n\r\ntype leftMenuProps = {\r\n  left: number,\r\n  transition: boolean,\r\n  page: string,\r\n  hoverPage: boolean,\r\n  toggleLeftMenu: Function,\r\n  history: BrowserHistory;\r\n}\r\n\r\nexport default class LeftMenu extends React.Component<leftMenuProps> {\r\n  render() {\r\n    const leftMenuStyle = css`\r\n      position: fixed;\r\n      z-index: 997;\r\n      top: 0;\r\n      left: ${this.props.left + \"px\"};\r\n      width: 300px;\r\n      height: calc(100% + 50px);\r\n      background: #FFF;\r\n      backdrop-filter: blur(15px) saturate(180%);\r\n      border-right: 1px solid rgba(0,0,0,0.05);\r\n      box-sizing: border-box;\r\n      transition: width 300ms ${this.props.transition ? \", left 350ms\" : \"\"};\r\n      @media screen and (max-width: 500px) {\r\n        width: 100%;\r\n        left: ${this.props.left};\r\n      }\r\n      @supports (-webkit-backdrop-filter: blur(15px)) {\r\n        background: rgba(255,255,255,0.7);\r\n      }\r\n      @supports (backdrop-filter: blur(15px)) {\r\n        background: rgba(255,255,255,0.7);\r\n      }\r\n    `\r\n    const innerStyle = css`\r\n      margin-top: 40px;\r\n      padding: 0 15px;\r\n      height: calc(100% - 90px);\r\n      overflow: auto;\r\n    `\r\n\r\n    return (\r\n      <div css={leftMenuStyle}>\r\n        <OverlayScrollbarsComponent css={innerStyle}>\r\n          {this.props.page === \"article\" || this.props.hoverPage?\r\n            <TOC hoverPage={this.props.hoverPage} toggleLeftMenu={this.props.toggleLeftMenu} history={this.props.history} />\r\n          : \"\"}\r\n        </OverlayScrollbarsComponent>\r\n      </div>\r\n    )\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\n\r\nconst roundButtonStyle = css`\r\n  position: relative;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: center; \r\n  align-items: center;\r\n  height: 40px;\r\n  width: 40px;\r\n  background: none;\r\n  transition: 200ms;\r\n  border: none;\r\n  outline: none;\r\n  user-select: none;\r\n  &::after {\r\n    position: absolute;\r\n    z-index: -1;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 50%;\r\n    top: 50%;\r\n    background: #000;\r\n    transform: translate(-50%, -50%) scale(0);\r\n  }\r\n  &:focus {\r\n    border: 2px solid #000;\r\n  }\r\n  &:hover {\r\n    color: #FFF;\r\n    border: none !important;\r\n    span {\r\n      background: #FFF;\r\n    }\r\n    &::after {\r\n      transition: 300ms;\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n  }\r\n  &:active {\r\n    color: #FFF;\r\n    border: none !important;\r\n    transform: scale(0.9);\r\n    span {\r\n      background: #FFF;\r\n    }\r\n    &::after {\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n  }\r\n`\r\n\r\ntype roundButtonProps = {\r\n  className?: string;\r\n  onClick?: Function;\r\n}\r\n\r\nexport default class RoundButton extends React.Component<roundButtonProps> {\r\n  private btnRef = React.createRef<any>();\r\n  render() {\r\n    return(\r\n      <button className={this.props.className} ref={this.btnRef} css={roundButtonStyle} onClick={this.onClick}>\r\n        {this.props.children}\r\n      </button>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    if (this.props.onClick !== undefined) this.props.onClick();\r\n    if (event.detail && document.activeElement !== null) {\r\n      this.btnRef.current.blur();\r\n    }\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport RoundButton from '../round-btn';\r\n\r\ninterface topBarProps {\r\n  toggleLeftMenu: Function;\r\n  leftMenuLeft: number;\r\n  hide?: boolean;\r\n  page: string;\r\n  toPage: Function;\r\n}\r\n\r\nexport default class TopBar extends React.Component<topBarProps> {\r\n  render() {\r\n    const topBarContainerStyle = css`\r\n      display: ${this.props.hide ? \"none\" : \"block\"};\r\n      position: fixed;\r\n      z-index: 998;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 40px;\r\n      background: #FFF;\r\n      backdrop-filter: blur(10px) saturate(180%);\r\n      border-bottom: 1px solid rgba(0,0,0,0.05);\r\n      white-space: nowrap;\r\n      @supports (-webkit-backdrop-filter: blur(10px)) {\r\n        background: rgba(255,255,255,0.8);\r\n      }\r\n      @supports (backdrop-filter: blur(10px)) {\r\n        background: rgba(255,255,255,0.8);\r\n      }\r\n    `\r\n    const topBarInnerStyle = css`\r\n      display: flex;\r\n      max-width: 1300px;\r\n      margin: 0 auto;\r\n    `\r\n    const topBarItemContainerStyle = css`\r\n      display: flex;\r\n      width: calc(100% - 40px);\r\n      overflow-x: auto;\r\n      overflow-y: hidden;\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      @media screen and (max-width: 1400px) {\r\n        margin-left: 40px;\r\n        mask-image: -webkit-linear-gradient(right, transparent, black 20px);\r\n      }\r\n    `\r\n\r\n    return (\r\n      <div>\r\n        <MenuButton onClick={this.props.toggleLeftMenu} leftMenuLeft={this.props.leftMenuLeft} />\r\n        <div css={topBarContainerStyle}>\r\n          <div css={topBarInnerStyle}>\r\n            <div css={topBarItemContainerStyle}>\r\n              <Item href={\"/\"} title=\"home\" onClick={() => { this.navOnClick(\"homepage\", 1) }} selected={this.props.page === \"homepage\" ? true : false} />\r\n              <Item title=\"categories\" />\r\n              <Item title=\"archive\" />\r\n              <Item title=\"tags\" />\r\n              <Item title=\"about\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  menuOnClick = () => {\r\n    this.props.toggleLeftMenu();\r\n  }\r\n  navOnClick = (page: string, pageNumber?: number, articleName?: string) => {\r\n    this.props.toPage(page, pageNumber, articleName);\r\n  }\r\n}\r\n\r\ntype itemProps = {\r\n  title: string;\r\n  href?: string;\r\n  selected?: boolean;\r\n  onClick?: Function;\r\n}\r\n\r\nconst itemStyle = css`\r\n  position: relative;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  text-decoration: none;\r\n  font-family: 'Secular One', 'Source Han Sans Old Style', sans-serif;\r\n  padding: 0 15px;\r\n  cursor: pointer;\r\n  transition: 200ms;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  -webkit-tap-highlight-color: transparent;\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      background: rgba(0,0,0,0.1);\r\n    }\r\n  }\r\n  &:active {\r\n    background: rgba(0,0,0,0.2);\r\n  }\r\n  &.selected {\r\n    border-bottom: 2px solid #000;\r\n  }\r\n`\r\n\r\nclass Item extends React.Component<itemProps> {\r\n  render() {\r\n    return (\r\n      <a css={itemStyle} href={this.props.href} className={\"top-bar-item\" + (this.props.selected ? \" selected\" : \"\")} onClick={this.onClick}>\r\n        {this.props.title}\r\n      </a>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    event.preventDefault();\r\n    if (this.props.onClick !== undefined) this.props.onClick();\r\n  }\r\n}\r\n\r\ntype menuButtonProps = {\r\n  onClick: Function;\r\n  leftMenuLeft: number;\r\n}\r\n\r\nconst menuButtonStyle = css`\r\n    position: fixed;\r\n    z-index: 999;\r\n    top: 0;\r\n`\r\n\r\nclass MenuButton extends React.Component<menuButtonProps> {\r\n  render() {\r\n    const spanStyle = `height: 2px; width: 20px; background: #000; margin: 2px 2px; transition: 200ms; `;\r\n    const width = document.body.clientWidth <= 500 ? document.body.clientWidth : 300;\r\n    const progress = 1 - Math.abs(this.props.leftMenuLeft) / width;\r\n    // console.log(progress);\r\n    return (\r\n      <div css={menuButtonStyle}>\r\n        <RoundButton onClick={this.onClick}>\r\n          <div css={css`display: flex; flex-direction: column;`}>\r\n            <span css={css`${spanStyle} transform: rotate(${-45 * progress}deg) scale(${1 - 0.52 * progress}, 0.9) translate(${-14 * progress}px, ${-2.5 * progress}px); `}></span>\r\n            <span css={css`${spanStyle} transform: scale(${1 - 0.1 * progress}, 0.9)`}></span>\r\n            <span css={css`${spanStyle} transform: rotate(${45 * progress}deg) scale(${1 - 0.52 * progress}, 0.9) translate(${-14 * progress}px, ${2.5 * progress}px); `}></span>\r\n          </div>\r\n        </RoundButton>\r\n      </div>\r\n    )\r\n  }\r\n  onClick = () => {\r\n    this.props.onClick();\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport LeftMenu from './left-menu';\r\nimport { BrowserHistory } from 'history';\r\nimport TopBar from './top-bar';\r\n\r\ninterface headerProps {\r\n  hideTopBar?: boolean;\r\n  page: string;\r\n  toPage: Function;\r\n  hoverPage: boolean;\r\n  history: BrowserHistory;\r\n}\r\n\r\nexport default class Header extends React.Component<headerProps> {\r\n  state = {\r\n    leftMenuLeft: 0,\r\n    width: document.body.clientWidth <= 500 ? document.body.clientWidth : 300,\r\n    transition: true\r\n  }\r\n  render() {\r\n    const swipeAreaStyle = css`\r\n      position: fixed;\r\n      z-index: 998;\r\n      height: 100%;\r\n      top: 0;\r\n      left: ${this.state.leftMenuLeft === 0 ? this.state.width - 10 + \"px\" : \"0\"};\r\n      width: 10px;\r\n    `\r\n\r\n    return (\r\n      <div>\r\n        <TopBar\r\n          toggleLeftMenu={this.toggleLeftMenu}\r\n          leftMenuLeft={this.state.leftMenuLeft}\r\n          hide={this.props.hideTopBar}\r\n          page={this.props.page}\r\n          toPage={this.props.toPage}\r\n        />\r\n        <LeftMenu\r\n          left={this.state.leftMenuLeft}\r\n          transition={this.state.transition}\r\n          page={this.props.page}\r\n          hoverPage={this.props.hoverPage}\r\n          toggleLeftMenu={this.toggleLeftMenu}\r\n          history={this.props.history}\r\n        />\r\n        <div css={swipeAreaStyle} onTouchStart={this.touchStart}></div>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount = () => {\r\n    this.onResize();\r\n    window.onresize = this.onResize;\r\n  }\r\n  onResize = () => {\r\n    const width = document.body.clientWidth <= 500 ? document.body.clientWidth : 300;\r\n    this.setState({ leftMenuLeft: -width, width: width });\r\n  }\r\n  toggleLeftMenu = () => {\r\n    if (this.state.leftMenuLeft === -this.state.width) {\r\n      this.setState({ leftMenuLeft: 0 })\r\n    } else {\r\n      this.setState({ leftMenuLeft: -this.state.width })\r\n    }\r\n  }\r\n  touchStart = () => {\r\n    if (this.state.transition) this.setState({ transition: false });\r\n    document.addEventListener('touchmove', this.touchMove);\r\n    document.addEventListener('touchend', this.touchEnd);\r\n  }\r\n  touchMove = (event: any) => {\r\n    let left: number;\r\n    left = (event.changedTouches[0].clientX - this.state.width);\r\n    if (event.changedTouches[0].clientX - this.state.width > 0) left = 0;\r\n    if (this.state.leftMenuLeft !== left) {\r\n      this.setState({ leftMenuLeft: left });\r\n      this.forceUpdate();\r\n    }\r\n    // console.log(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\r\n  }\r\n  touchEnd = (event: any) => {\r\n    if (!this.state.transition) this.setState({ transition: true });\r\n    if (event.changedTouches[0].clientX < this.state.width / 2) this.setState({ leftMenuLeft: -this.state.width });\r\n    if (event.changedTouches[0].clientX >= this.state.width / 2) this.setState({ leftMenuLeft: 0 });\r\n    document.removeEventListener('touchmove', this.touchMove);\r\n    document.removeEventListener('touchend', this.touchEnd);\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\nimport Helmet from 'react-helmet';\r\nimport Loading from '../comp/loading';\r\nimport articleStyle from '../style/articleStyle';\r\nimport tocbot from 'tocbot';\r\n\r\ninterface articleProps {\r\n  articleName: string;\r\n  hover?: boolean;\r\n  loadOver?: Function;\r\n}\r\n\r\nexport default class Article extends React.Component<articleProps> {\r\n  state = {\r\n    articleName: this.props.articleName,\r\n    content: \"\",\r\n    head: \"\"\r\n  }\r\n  render() {\r\n    const titleContainerStyle = css`\r\n      display: flex;\r\n      flex-direction: column-reverse;\r\n      z-index: 1;\r\n      min-height: ${getInfo(this.state.head, \"picture\")? \"290px\" : \"auto\"};\r\n      /* background: red; */\r\n    `\r\n\r\n    const titleStyle = css`\r\n      position: relative;\r\n      margin: 0 0 20px 0;\r\n      width: fit-content;\r\n      color: #FFF;\r\n      &::before {\r\n        content: \"\";\r\n        z-index: -1;\r\n        position: absolute;\r\n        left: -40px;\r\n        top: -3px;\r\n        width: calc(100% + 45px);\r\n        height: 100%;\r\n        background: #000;\r\n      }\r\n    `\r\n\r\n    const innerStyle = css`\r\n      padding: ${this.props.hover? \"50px 40px 10px 40px\" : \"20px 20px 10px 20px\"};\r\n      transition: 300ms;\r\n      opacity: ${this.state.content === \"\" ? 0 : 1};\r\n    `\r\n\r\n    const coverStyle = css`\r\n      display: ${getInfo(this.state.head, \"picture\")? \"block\" : \"none\"};\r\n      z-index: -1;\r\n      position: absolute;\r\n      border-bottom-style: solid;\r\n      border-left-style: ${this.props.hover? \"solid\" : \"none\"};\r\n      border-right-style: ${this.props.hover? \"solid\" : \"none\"};\r\n      border-color: #000;\r\n      border-width: ${this.props.hover? \"5px\" : \"3px\"};\r\n      box-sizing: border-box;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 300px;\r\n      background: url(${getInfo(this.state.head, \"picture\")}) center/cover;\r\n    `\r\n\r\n    return (\r\n      <div css={articleStyle}>\r\n        <Helmet>\r\n          <title>{getInfo(this.state.head, \"title\") + \" - Nanoscale\"}</title>\r\n        </Helmet>\r\n        <Loading show={this.state.content === \"\" ? true : false} />\r\n        <div css={innerStyle}>\r\n          <div css={coverStyle}></div>\r\n          <div css={titleContainerStyle}>\r\n            <h1 className=\"title\" css={titleStyle}>{getInfo(this.state.head, \"title\")}</h1>\r\n          </div>\r\n          <ReactMarkdown className=\"article-content\" source={this.state.content} escapeHtml={false} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  updateContent = () => {\r\n    if (this.state.articleName !== \"\" && this.state.content === \"\") {\r\n      fetch(\"/source/article/\" + this.state.articleName + \".md\")\r\n        .then((res) => res.text())\r\n        .then(data => {\r\n          let head = getHead(data);\r\n          let content = getContent(data);\r\n          this.setState({ content: content, head: head }, ()=>{\r\n            OverlayScrollbars(document.querySelectorAll(\"pre\"), { scrollbars: { autoHide: 'scroll' } });\r\n            let headings = document.querySelector(\".article-content\")?.querySelectorAll(\"h1, h2, h3, h4\");\r\n            headings?.forEach(element => {\r\n              let text = element.textContent? element.textContent : \"\";\r\n              let id: string = text.replace(/\\s/g, \"-\");\r\n              element.id = id;\r\n            })\r\n            tocbot.refresh();\r\n            if(this.props.loadOver) this.props.loadOver();\r\n          });\r\n        })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.updateContent();\r\n  }\r\n  // static getDerivedStateFromProps(props: articlePageProps, state: any) {\r\n  //     const {articleName} = props;\r\n  //     if (articleName !== state.articleName) {\r\n  //         return {articleName, content: \"\", head: \"\"};\r\n  //     }\r\n  //     return null;\r\n  // }\r\n}\r\n\r\nfunction getHead(text: string) {\r\n  const headRe = /<!--[\\s\\S]*?-->/;\r\n  const ex = headRe.exec(text);\r\n  if (ex !== null) {\r\n    return ex[0];\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction getContent(text: string) {\r\n  const headRe = /<!--[\\s\\S]*?-->/;\r\n  const content = text.replace(headRe, \"\");\r\n  return content;\r\n}\r\n\r\nfunction getInfo(text: string, label: string) {\r\n  let re, rp;\r\n  switch (label) {\r\n    case \"title\":\r\n      re = /title:\\s*.*/;\r\n      rp = /title:\\s*/;\r\n      break;\r\n    case \"createTime\":\r\n      re = /createtime:\\s*.*/;\r\n      rp = /createtime:\\s*/;\r\n      break;\r\n    case \"picture\":\r\n      re = /picture:\\s*.*/;\r\n      rp = /picture:\\s*/;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n\r\n  const ex = re.exec(text);\r\n  if (ex !== null) {\r\n    let info = ex[0];\r\n    info = info.replace(rp, \"\");\r\n    return info;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\nimport { BrowserHistory } from 'history';\r\nimport Article from './article';\r\nimport RoundButton from './round-btn';\r\n\r\ntype hoverPageProps = {\r\n  show: boolean;\r\n  hideHoverPage: Function;\r\n  history: BrowserHistory;\r\n  articleName: string;\r\n}\r\n\r\nexport default class HoverPage extends React.Component<hoverPageProps> {\r\n  state = {\r\n    show: this.props.show,\r\n    articleName: this.props.articleName,\r\n    display: \"none\",\r\n    opacity: 0,\r\n    scale: 1.1\r\n  }\r\n  render() {\r\n    const hoverPageStyle = css`\r\n      display: ${this.state.display};\r\n      position: fixed;\r\n      z-index: 996;\r\n      height: 100%;\r\n      width: 1170px;\r\n      top: 0;\r\n      left: 50%;\r\n      transform: translateX(-50%) scale(${this.state.scale});\r\n      border-left: 5px solid #000;\r\n      border-right: 5px solid #000;\r\n      opacity: ${this.state.opacity};\r\n      transition: 300ms;\r\n      background: #FFF;\r\n      @media screen and (max-width: 1300px) {\r\n        width: 90%;\r\n      }\r\n      @media screen and (max-width: 800px) {\r\n        width: 100%;\r\n      }\r\n    `\r\n    const shadowStyle = css`\r\n      display: ${this.state.display};\r\n      position: fixed;\r\n      opacity: ${this.state.opacity};\r\n      width: 100%;\r\n      height: 100%;\r\n      top: 0;\r\n      background: rgba(0,0,0,0.1);\r\n    `\r\n    const closeButtonStyle = css`\r\n      z-index: 2;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      button {\r\n        font-family: \"iconfont\";\r\n        font-size: 24px;\r\n        color: #000;\r\n      }\r\n    `\r\n\r\n    const innerStyle = css`\r\n      position: relative;\r\n      left: -20px;\r\n      width: calc(100% + 40px);\r\n      height: 100%;\r\n      overflow: auto;\r\n    `\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"hover-page\" css={hoverPageStyle}>\r\n          <div css={closeButtonStyle}><RoundButton onClick={this.close}>&#xe615;</RoundButton></div>\r\n          <OverlayScrollbarsComponent className=\"hover-page-inner\" css={innerStyle} options={{ scrollbars: { autoHide: 'scroll' } }} >\r\n            <div>\r\n              {this.state.show? <Article articleName={this.state.articleName} hover={true} /> : null}\r\n            </div>\r\n          </OverlayScrollbarsComponent>\r\n        </div>\r\n        <div css={shadowStyle}></div>\r\n      </div>\r\n    )\r\n  }\r\n  static getDerivedStateFromProps(props: hoverPageProps, state: any) {\r\n    const { show, articleName } = props;\r\n    if (show !== state.show || articleName !== state.articleName) {\r\n      return { show, articleName, picUrl: \"\" };\r\n    }\r\n    return null;\r\n  }\r\n  close = () => {\r\n    this.props.hideHoverPage();\r\n    this.props.history.back();\r\n  }\r\n  back = () => {\r\n    this.props.history.push(window.location.href);\r\n    this.close();\r\n  }\r\n  componentDidUpdate = () => {\r\n    if (this.state.show && this.state.opacity !== 1 && this.state.display !== \"block\") {\r\n      window.addEventListener('popstate', this.back);\r\n      this.setState({ display: \"block\" }, () => {\r\n        setTimeout(() => {\r\n          this.setState({ opacity: 1, scale: 1 })\r\n        })\r\n      })\r\n    } else if (!this.state.show && this.state.opacity !== 0 && this.state.display !== \"none\") {\r\n      window.removeEventListener('popstate', this.back);\r\n      this.setState({ opacity: 0, scale: 1.1 }, () => {\r\n        setTimeout(() => {\r\n          this.setState({ display: \"none\" });\r\n        }, 300)\r\n      })\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport Article from '../comp/article';\r\nimport Block from '../comp/block';\r\n\r\ninterface props {\r\n  articleName: string;\r\n}\r\n\r\nexport default class ArticlePage extends React.Component<props> {\r\n  render() {\r\n    return(\r\n      <Block>\r\n        <div>\r\n          <Article articleName={this.props.articleName} loadOver={this.jumpToAnchor} />\r\n        </div>\r\n      </Block>\r\n    )\r\n  }\r\n  jumpToAnchor = () => {\r\n    let id = decodeURI(window.location.hash.replace(\"#\", \"\"));\r\n    let offsetTop = document.getElementById(id)?.offsetTop;\r\n    let viewport = document.querySelector(\"body > .os-padding > .os-viewport\");\r\n    if (viewport) viewport.scrollTop = offsetTop!;\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css, Global } from '@emotion/core'\r\nimport React from 'react';\r\nimport { createBrowserHistory } from 'history';\r\nimport Helmet from 'react-helmet';\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\nimport Homepage from '../page/homepage';\r\nimport Footer from './footer';\r\nimport Header from './header/header';\r\nimport HoverPage from './hover-page';\r\nimport ArticlePage from '../page/article-page';\r\n\r\nconst history = createBrowserHistory();\r\nlet initialPage = \"\";\r\nlet initialPageData = {\r\n  pageNumber: 0,\r\n  articleName: \"\"\r\n};\r\nrouter();\r\n\r\nexport default class Frame extends React.Component {\r\n  state = {\r\n    hoverPage: false,\r\n    page: initialPage,\r\n    pageNumber: initialPageData.pageNumber,\r\n    articleName: initialPageData.articleName,\r\n  }\r\n  render() {\r\n    const contentOuterStyle = css`\r\n      margin: 0 auto;\r\n      max-width: 1300px;\r\n      filter: ${this.state.hoverPage ? \"blur(10px)\" : \"none\"};\r\n      transition: filter 300ms;\r\n      pointer-events: ${this.state.hoverPage ? \"none\" : \"auto\"};\r\n    `\r\n    const contentInnerStyle = css`\r\n      margin-top: 70px;\r\n      width: 100%;\r\n    `\r\n    return (\r\n      <div lang=\"zh-TW\">\r\n        <Global\r\n          styles={css`\r\n            body {\r\n              overflow: ${this.state.hoverPage ? \"hidden\" : \"auto\"};\r\n            }\r\n          `}\r\n        />\r\n        <Helmet>\r\n          <title>Nanoscale</title>\r\n        </Helmet>\r\n        <Header hideTopBar={this.state.hoverPage} page={this.state.page} hoverPage={this.state.hoverPage} toPage={this.toPage} history={history} />\r\n        <div css={contentOuterStyle}>\r\n          <div css={contentInnerStyle}>\r\n            <Switch\r\n              page={this.state.page}\r\n              pageNumber={this.state.pageNumber}\r\n              articleName={this.state.articleName}\r\n              openArticle={this.openArticle}\r\n              toPageNumber={this.toPageNumber}\r\n            />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        <HoverPage show={this.state.hoverPage} hideHoverPage={this.hideHoverPage} history={history} articleName={this.state.articleName} />\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount = () => {\r\n    window.addEventListener('popstate', this.urlChanged);\r\n    OverlayScrollbars(document.body, { scrollbars: { autoHide: 'scroll' } });\r\n  }\r\n  urlChanged = () => {\r\n    router();\r\n    if (initialPage !== this.state.page ||\r\n      initialPageData.pageNumber !== this.state.pageNumber ||\r\n      initialPageData.articleName !== this.state.articleName) {\r\n      this.setState({ page: initialPage, pageNumber: initialPageData.pageNumber, articleName: initialPageData.articleName });\r\n    }\r\n  }\r\n  showHoverPage = () => {\r\n    window.removeEventListener('popstate', this.urlChanged);\r\n    this.setState({ hoverPage: true });\r\n  }\r\n  hideHoverPage = () => {\r\n    window.addEventListener('popstate', this.urlChanged);\r\n    this.setState({ hoverPage: false });\r\n  }\r\n  openArticle = (name: string) => {\r\n    history.push(`/article/${name}/`);\r\n    this.setState({ articleName: name, hoverPage: true })\r\n  }\r\n  toPage = (page: string, pageNumber: number, articleName: string) => {\r\n    this.setState({ page });\r\n    if (pageNumber) this.setState({ pageNumber });\r\n    if (articleName) this.setState({ articleName });\r\n    switch (page) {\r\n      default:\r\n      case \"homepage\":\r\n        history.push('/#');\r\n        break;\r\n    }\r\n  }\r\n  toPageNumber = (page: number) => {\r\n    this.setState({pageNumber: page});\r\n    history.push(`/page/${page}`);\r\n  }\r\n}\r\n\r\ntype switchProps = {\r\n  page: string;\r\n  openArticle: Function;\r\n  toPageNumber: Function;\r\n  pageNumber: number;\r\n  articleName: string;\r\n}\r\n\r\nclass Switch extends React.Component<switchProps> {\r\n  render() {\r\n    let page;\r\n    switch (this.props.page) {\r\n      default:\r\n      case \"homepage\":\r\n        page = <Homepage openArticle={this.props.openArticle} toPageNumber={this.props.toPageNumber} pageNumber={this.props.pageNumber} />;\r\n        break;\r\n      case \"article\":\r\n        page = (\r\n          <ArticlePage articleName={this.props.articleName} />\r\n        )\r\n        break;\r\n    }\r\n    return page;\r\n  }\r\n}\r\n\r\nfunction router() {\r\n  // console.log(window.location.hostname, window.location.href);\r\n  if (window.location.href.indexOf(\"/?jump=\") !== -1) {\r\n    // console.log(\"jump\");\r\n    let a = window.location.href.split(\"/?jump=\");\r\n    history.push(a[1] + \"?\");\r\n  }\r\n  if (window.location.pathname.startsWith(\"/article\")) {\r\n    initialPage = \"article\";\r\n    let a = window.location.pathname.split(\"/\");\r\n    initialPageData.articleName = a[2];\r\n  } else if (window.location.pathname.startsWith(\"/page\")) {\r\n    initialPage = \"homepage\";\r\n    let a = window.location.pathname.split(\"/\");\r\n    initialPageData.pageNumber = parseInt(a[2]);\r\n  } else {\r\n    initialPage = \"homepage\";\r\n    initialPageData.pageNumber = 1;\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Frame from './comp/frame';\r\nimport './OverlayScrollbars.css';\r\nimport './main.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Frame />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}