{"version":3,"sources":["comp/block.tsx","comp/color.ts","comp/article-style.ts","comp/article-list/article-block.tsx","comp/loading.tsx","comp/page-nav.tsx","page/homepage.tsx","comp/footer.tsx","comp/header/left-menu.tsx","comp/round-btn.tsx","comp/header/top-bar.tsx","comp/header/header.tsx","comp/hover-page.tsx","page/article.tsx","comp/frame.tsx","serviceWorker.ts","index.tsx"],"names":["blockStyle","css","Block","this","props","children","React","Component","color","highlight","grey","lightGrey","red","articleStyle","ArticleBlock","onClick","articleName","title","source","description","escapeHtml","titleStyle","Title","event","preventDefault","undefined","href","Loading","outerAnimation","keyframes","innerAnimation","loadingStyle","show","className","PageNav","toPageNumber","page","num","currentPage","i","totalPage","toString","url","selected","PageNumber","numberStyle","Homepage","state","pageNumber","data","articleList","openArticle","name","updateContent","length","fetch","then","res","json","setState","componentDidMount","componentDidUpdate","list","map","item","key","fileName","parseInt","footerStyle","Footer","isFF","window","navigator","userAgent","indexOf","LeftMenu","left","transition","leftMenuStyle","roundButtonStyle","RoundButton","btnRef","createRef","detail","document","activeElement","current","blur","ref","TopBar","menuOnClick","toggleLeftMenu","navOnClick","toPage","topBarContainerStyle","hide","topBarInnerStyle","topBarItemContainerStyle","leftMenuLeft","itemStyle","Item","menuButtonStyle","MenuButton","spanStyle","width","body","clientWidth","progress","Math","abs","Header","onResize","onresize","touchStart","addEventListener","touchMove","touchEnd","changedTouches","clientX","forceUpdate","removeEventListener","swipeAreaStyle","hideTopBar","onTouchStart","HoverPage","display","opacity","scale","close","hideHoverPage","history","back","push","location","setTimeout","hoverPageStyle","shadowStyle","closeButtonStyle","innerStyle","options","scrollbars","autoHide","ArticlePage","content","head","text","getHead","getContent","OverlayScrollbars","querySelectorAll","label","ex","RegExp","exec","getInfo","replace","initialPage","initialPageData","createBrowserHistory","router","Frame","hoverPage","pageData","urlChanged","showHoverPage","contentOuterStyle","contentInnerStyle","lang","styles","Switch","a","split","pathname","startsWith","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"05BAIA,IAAMA,EAAaC,YAAH,KA0BKC,E,uKAEb,OACI,mBAAKD,IAAKD,GACLG,KAAKC,MAAMC,c,GAJOC,IAAMC,WCvB1BC,EAPD,CACVC,UAAW,UACXC,KAAM,UACNC,UAAW,UACXC,IAAK,W,2sBCFT,IAkCeC,EAlCMZ,YAAH,IAOAO,EAAMG,UAWKH,EAAMG,UASdH,EAAMC,UACYD,EAAMC,W,+4BChBxBK,E,4MAWnBC,QAAU,WACR,EAAKX,MAAMW,QAAQ,EAAKX,MAAMY,c,uDAV9B,OACE,YAAC,EAAD,KACE,uBACE,YAAC,EAAD,CAAOC,MAAOd,KAAKC,MAAMa,MAAOF,QAASZ,KAAKY,QAASC,YAAab,KAAKC,MAAMY,cAC/E,YAAC,IAAD,CAAeE,OAAQf,KAAKC,MAAMe,YAAaC,YAAY,EAAOnB,IAAKY,U,GANvCP,IAAMC,WAsB1Cc,EAAapB,YAAH,KAwCVqB,E,4MAQFP,QAAU,SAACQ,GACPA,EAAMC,sBACqBC,IAAvB,EAAKrB,MAAMW,SAAuB,EAAKX,MAAMW,W,uDARjD,OACI,iBAAGW,KAAI,mBAAcvB,KAAKC,MAAMY,YAAzB,KAAyCf,IAAKoB,EAAYN,QAASZ,KAAKY,SAC3E,sBAAKZ,KAAKC,MAAMa,Y,GAJZX,IAAMC,W,s+CCnELoB,E,uKAEb,IAAMC,EAAiBC,YAAH,KAkBdC,EAAiBD,YAAH,KAkBdE,EAAe9B,YAAH,IAEFE,KAAKC,MAAM4B,KAAe,QAAT,OAMhBJ,EAQKpB,EAAMC,UACPqB,GAIrB,OACI,mBAAKG,UAAU,UAAUhC,IAAK8B,Q,GA5DLzB,IAAMC,W,m+BCGtB2B,E,4MAiCnBC,aAAe,SAACC,GACD,IAATA,GACF,EAAKhC,MAAM+B,aAAaC,I,uDAlClB,IAAD,OACHC,EAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GACflC,KAAKC,MAAMkC,YAAc,GAAK,EAChCD,EAAI,GAAKlC,KAAKC,MAAMkC,YAAc,EACzBnC,KAAKC,MAAMkC,YAAc,GAAK,EACvCD,EAAI,GAAKlC,KAAKC,MAAMkC,YAAc,EAElCD,EAAI,GAAKlC,KAAKC,MAAMkC,YAGtB,IAAK,IAAIC,EAAE,EAAGA,EAAE,GACVF,EAAIE,EAAE,GAAK,GAAKpC,KAAKC,MAAMoC,UADdD,IAEfF,EAAIE,GAAKF,EAAIE,EAAE,GAAK,EAMxB,OACE,mBAAKtC,IAAKA,YAAF,IAA0C,IAAzBE,KAAKC,MAAMoC,UAAiB,OAAS,UAC5D,mBAAKvC,IAAKA,YAAF,MACN,YAAC,EAAD,CAAYoC,IAAK,MACjB,YAAC,EAAD,CAAYA,IAAKA,EAAI,GAAGI,WAAY1B,QAAS,WAAK,EAAKoB,aAAaE,EAAI,KAAMK,IAAKvC,KAAKC,MAAMsC,IAAM,QAAUL,EAAI,GAAIM,SAAUxC,KAAKC,MAAMkC,cAAgBD,EAAI,KAC/J,YAAC,EAAD,CAAYA,IAAKA,EAAI,GAAGI,WAAY1B,QAAS,WAAK,EAAKoB,aAAaE,EAAI,KAAMK,IAAKvC,KAAKC,MAAMsC,IAAM,QAAUL,EAAI,GAAIM,SAAUxC,KAAKC,MAAMkC,cAAgBD,EAAI,KAC/J,YAAC,EAAD,CAAYA,IAAKA,EAAI,GAAGI,WAAY1B,QAAS,WAAK,EAAKoB,aAAaE,EAAI,KAAMK,IAAKvC,KAAKC,MAAMsC,IAAM,QAAUL,EAAI,GAAIM,SAAUxC,KAAKC,MAAMkC,cAAgBD,EAAI,KAC/J,YAAC,EAAD,CAAYA,IAAKA,EAAI,GAAGI,WAAY1B,QAAS,WAAK,EAAKoB,aAAaE,EAAI,KAAMK,IAAKvC,KAAKC,MAAMsC,IAAM,QAAUL,EAAI,GAAIM,SAAUxC,KAAKC,MAAMkC,cAAgBD,EAAI,KAC/J,YAAC,EAAD,CAAYA,IAAKA,EAAI,GAAGI,WAAY1B,QAAS,WAAK,EAAKoB,aAAaE,EAAI,KAAMK,IAAKvC,KAAKC,MAAMsC,IAAM,QAAUL,EAAI,GAAIM,SAAUxC,KAAKC,MAAMkC,cAAgBD,EAAI,KAC/J,YAAC,EAAD,CAAYA,IAAK,Y,GA5BU/B,IAAMC,WA+CrCqC,E,4MAkCJ7B,QAAU,SAACQ,GACTA,EAAMC,sBACqBC,IAAvB,EAAKrB,MAAMW,SACb,EAAKX,MAAMW,W,uDAnCb,IAAM8B,EAAc5C,YAAH,IACe,MAAnBE,KAAKC,MAAMiC,IAAa,OAAS,eAGnClC,KAAKC,MAAMuC,SAAU,OAAS,OAChBxC,KAAKC,MAAMuC,SAAU,MAAQ,MACxBxC,KAAKC,MAAMuC,SAAU,OAAS,eAsB5D,OACE,iBAAGjB,KAAMvB,KAAKC,MAAMsC,IAAKzC,IAAK4C,EAAa9B,QAASZ,KAAKY,SAAUZ,KAAKC,MAAMiC,S,GA/B3D/B,IAAMC,WChDVuC,E,4MACnBC,MAAQ,CACNC,WAAY,EAAK5C,MAAM6C,KAAKD,WAC5BE,YAAa,GACbV,UAAW,G,EAiBbW,YAAc,SAACC,GACb,EAAKhD,MAAM+C,YAAYC,I,EAEzBC,cAAgB,WACwB,IAAlC,EAAKN,MAAMG,YAAYI,aAA0C7B,IAA1B,EAAKsB,MAAMC,aACpDO,MAAM,oBAAsB,EAAKR,MAAMC,WAAa,SACjDQ,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACE,GACL,EAAKC,SAAS,CAACT,YAAaQ,OAGhCH,MAAM,kCACHC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACE,GACL,EAAKC,SAAS,CAACnB,UAAWkB,EAAKtB,Y,EAIvCwB,kBAAoB,WAClB,EAAKP,iB,EAEPQ,mBAAqB,WACnB,EAAKR,iB,uDAzCG,IAAD,OACHS,EAAO,KAMX,OALI3D,KAAK4C,MAAMG,cAAgB,KAC7BY,EAAO3D,KAAK4C,MAAMG,YAAYa,KAAI,SAACC,GAAD,OAChC,kBAAC,EAAD,CAAcC,IAAKD,EAAKE,SAAUjD,MAAO+C,EAAK/C,MAAOD,YAAagD,EAAKE,SAAU/C,YAAa6C,EAAK7C,YAAaJ,QAAS,EAAKoC,kBAIhI,yBAAKlB,UAAU,YACb,kBAAC,EAAD,CAASD,KAAwC,IAAlC7B,KAAK4C,MAAMG,YAAYI,SACrCQ,EACD,kBAAC,EAAD,CAASxB,YAAa6B,SAAShE,KAAK4C,MAAMC,YAAab,aAAchC,KAAKC,MAAM+B,aAAcK,UAAWrC,KAAK4C,MAAMP,UAAWE,IAAK,U,gDAgC1GtC,EAAsB2C,GAAa,IAC1DE,EAAQ7C,EAAR6C,KACP,OAAIA,EAAKD,aAAeD,EAAMC,WACrB,CAACA,WAAYC,EAAKD,WAAYE,YAAa,IAE7C,S,GAtD2B5C,IAAMC,W,yJCN5C,IAAM6D,EAAcnE,YAAH,IAIJO,EAAME,MAGE2D,E,uKAEb,OACI,mBAAKpE,IAAKmE,GAAV,2B,GAHwB9D,IAAMC,W,6iBCT1C,IACM+D,GAAkC,IAD7BC,OAAOC,UAAUC,UACZC,QAAQ,WAOHC,E,4MACjB5B,MAAQ,CACJ6B,KAAM,EAAKxE,MAAMwE,KACjBC,WAAY,EAAKzE,MAAMyE,Y,uDAGvB,IAAMC,EAAgB7E,YAAH,IAIPE,KAAK4C,MAAM6B,KAAO,KAGZN,EAAM,OAAS,wBAGHnE,KAAK4C,MAAM8B,WAAY,eAAiB,GAGtD1E,KAAK4C,MAAM6B,MAG3B,OACI,mBAAK3E,IAAK6E,O,gDAKc1E,EAAsB2C,GAAa,IACxD6B,EAAoBxE,EAApBwE,KAAMC,EAAczE,EAAdyE,WACb,OAAID,IAAS7B,EAAM6B,KACR,CAACA,QAERC,IAAe9B,EAAM8B,WACd,CAACA,cAEL,S,GApCuBvE,IAAMC,W,w+BCP5C,IAAMwE,EAAmB9E,YAAH,KAwDD+E,E,4MACXC,OAAS3E,IAAM4E,Y,EAQvBnE,QAAU,SAACQ,QACkBE,IAAvB,EAAKrB,MAAMW,SAAuB,EAAKX,MAAMW,UAC7CQ,EAAM4D,QAAqC,OAA3BC,SAASC,eAC3B,EAAKJ,OAAOK,QAAQC,Q,uDATtB,OACE,sBAAQtD,UAAW9B,KAAKC,MAAM6B,UAAWuD,IAAKrF,KAAK8E,OAAQhF,IAAK8E,EAAkBhE,QAASZ,KAAKY,SAC7FZ,KAAKC,MAAMC,c,GALqBC,IAAMC,W,2mECxD/C,IACM+D,IAAkC,IAD7BC,OAAOC,UAAUC,UACZC,QAAQ,WAUHe,G,4MAiDnBC,YAAc,WACZ,EAAKtF,MAAMuF,kB,EAEbC,WAAa,SAACxD,GACZ,EAAKhC,MAAMyF,OAAOzD,EAAM,CAAEY,WAAY,K,uDApD9B,IAAD,OACD8C,EAAuB7F,YAAH,KACbE,KAAKC,MAAM2F,KAAO,OAAS,QAMxBzB,GAAO,OAAS,yBAK1B0B,EAAmB/F,YAAH,MAKhBgG,EAA2BhG,YAAH,KAc9B,OACE,uBACE,YAAC,GAAD,CAAYc,QAASZ,KAAKC,MAAMuF,eAAgBO,aAAc/F,KAAKC,MAAM8F,eACzE,mBAAKjG,IAAK6F,GACR,mBAAK7F,IAAK+F,GACR,mBAAK/F,IAAKgG,GACR,YAAC,GAAD,CAAMvE,KAAM,IAAKT,MAAM,WAAWF,QAAS,WAAQ,EAAK6E,WAAW,aAAejD,SAA8B,aAApBxC,KAAKC,MAAMgC,OACvG,YAAC,GAAD,CAAMnB,MAAM,eACZ,YAAC,GAAD,CAAMA,MAAM,SACZ,YAAC,GAAD,CAAMA,MAAM,kB,GA1CUX,IAAMC,WAgEpC4F,GAAYlG,YAAH,KA2BTmG,G,4MAQJrF,QAAU,SAACQ,GACTA,EAAMC,sBACqBC,IAAvB,EAAKrB,MAAMW,SAAuB,EAAKX,MAAMW,W,uDARjD,OACE,iBAAGd,IAAKkG,GAAWzE,KAAMvB,KAAKC,MAAMsB,KAAMO,UAAW,gBAAkB9B,KAAKC,MAAMuC,SAAW,YAAc,IAAK5B,QAASZ,KAAKY,SAC3HZ,KAAKC,MAAMa,W,GAJDX,IAAMC,WAmBnB8F,GAAkBpG,YAAH,KAMfqG,G,4MAkBJvF,QAAU,WACR,EAAKX,MAAMW,W,uDAjBX,IAAMwF,EAAS,mFACTC,EAAQpB,SAASqB,KAAKC,aAAe,IAAMtB,SAASqB,KAAKC,YAAc,IACvEC,EAAW,EAAIC,KAAKC,IAAI1G,KAAKC,MAAM8F,cAAgBM,EAEzD,OACE,mBAAKvG,IAAKoG,IACR,YAAC,EAAD,CAAatF,QAASZ,KAAKY,SACzB,mBAAKd,IAAKA,YAAF,MACN,oBAAMA,IAAKA,YAAF,IAAQsG,GAAgC,GAAKI,EAAsB,EAAI,IAAOA,GAA6B,GAAKA,GAAgB,IAAMA,KAC/I,oBAAM1G,IAAKA,YAAF,IAAQsG,EAA8B,EAAI,GAAMI,KACzD,oBAAM1G,IAAKA,YAAF,IAAQsG,EAA+B,GAAKI,EAAsB,EAAI,IAAOA,GAA6B,GAAKA,EAAe,IAAMA,Y,GAZhIrG,IAAMC,W,gPCvHVuG,G,4MACjB/D,MAAQ,CACJmD,aAAc,EACdM,MAAOpB,SAASqB,KAAKC,aAAe,IAAKtB,SAASqB,KAAKC,YAAc,IACrE7B,YAAY,G,EAoBhBjB,kBAAoB,WAChB,EAAKmD,WACLxC,OAAOyC,SAAW,EAAKD,U,EAE3BA,SAAW,WACP,IAAMP,EAAQpB,SAASqB,KAAKC,aAAe,IAAKtB,SAASqB,KAAKC,YAAc,IAC5E,EAAK/C,SAAS,CAACuC,cAAeM,EAAOA,MAAOA,K,EAEhDb,eAAiB,WACT,EAAK5C,MAAMmD,gBAAkB,EAAKnD,MAAMyD,MACxC,EAAK7C,SAAS,CAACuC,aAAc,IAE7B,EAAKvC,SAAS,CAACuC,cAAe,EAAKnD,MAAMyD,S,EAGjDS,WAAa,WACL,EAAKlE,MAAM8B,YAAY,EAAKlB,SAAS,CAACkB,YAAY,IACtDO,SAAS8B,iBAAiB,YAAa,EAAKC,WAC5C/B,SAAS8B,iBAAiB,WAAY,EAAKE,W,EAE/CD,UAAY,SAAC5F,GACT,IAAIqD,EACJA,EAAQrD,EAAM8F,eAAe,GAAGC,QAAU,EAAKvE,MAAMyD,MACjDjF,EAAM8F,eAAe,GAAGC,QAAU,EAAKvE,MAAMyD,MAAQ,IAAG5B,EAAO,GAC/D,EAAK7B,MAAMmD,eAAiBtB,IAC5B,EAAKjB,SAAS,CAACuC,aAActB,IAC7B,EAAK2C,gB,EAIbH,SAAW,SAAC7F,GACH,EAAKwB,MAAM8B,YAAY,EAAKlB,SAAS,CAACkB,YAAY,IACnDtD,EAAM8F,eAAe,GAAGC,QAAU,EAAKvE,MAAMyD,MAAQ,GAAG,EAAK7C,SAAS,CAACuC,cAAe,EAAKnD,MAAMyD,QACjGjF,EAAM8F,eAAe,GAAGC,SAAW,EAAKvE,MAAMyD,MAAQ,GAAG,EAAK7C,SAAS,CAACuC,aAAc,IAC1Fd,SAASoC,oBAAoB,YAAa,EAAKL,WAC/C/B,SAASoC,oBAAoB,WAAY,EAAKJ,W,uDApD9C,IAAMK,EAAiBxH,YAAH,KAKoB,IAA5BE,KAAK4C,MAAMmD,aAAoB/F,KAAK4C,MAAMyD,MAAQ,GAAK,KAAO,KAI1E,OACI,uBACI,YAAC,GAAD,CAAQb,eAAgBxF,KAAKwF,eAAgBO,aAAc/F,KAAK4C,MAAMmD,aAAcH,KAAM5F,KAAKC,MAAMsH,WAAYtF,KAAMjC,KAAKC,MAAMgC,KAAMyD,OAAQ1F,KAAKC,MAAMyF,SAC3J,YAAC,EAAD,CAAUjB,KAAMzE,KAAK4C,MAAMmD,aAAcrB,WAAY1E,KAAK4C,MAAM8B,aAChE,mBAAK5E,IAAKwH,EAAgBE,aAAcxH,KAAK8G,kB,GApBzB3G,IAAMC,W,qpDCCrBqH,G,4MACjB7E,MAAQ,CACJf,KAAM,EAAK5B,MAAM4B,KACjB6F,QAAS,OACTC,QAAS,EACTC,MAAO,K,EA2EXC,MAAQ,WACJ,EAAK5H,MAAM6H,gBACX,EAAK7H,MAAM8H,QAAQC,Q,EAEvBA,KAAO,WACH,EAAK/H,MAAM8H,QAAQE,KAAK7D,OAAO8D,SAAS3G,MACxC,EAAKsG,S,EAETnE,mBAAqB,WACb,EAAKd,MAAMf,MAA+B,IAAvB,EAAKe,MAAM+E,SAAwC,UAAvB,EAAK/E,MAAM8E,SAC1DtD,OAAO2C,iBAAiB,WAAY,EAAKiB,MACzC,EAAKxE,SAAS,CAACkE,QAAS,UAAU,WAC9BS,YAAW,WACP,EAAK3E,SAAS,CAACmE,QAAS,EAAGC,MAAO,WAGlC,EAAKhF,MAAMf,MAA+B,IAAvB,EAAKe,MAAM+E,SAAwC,SAAvB,EAAK/E,MAAM8E,UAClEtD,OAAOiD,oBAAoB,WAAY,EAAKW,MAC5C,EAAKxE,SAAS,CAACmE,QAAS,EAAGC,MAAO,MAAM,WACpCO,YAAW,WACP,EAAK3E,SAAS,CAACkE,QAAS,WACzB,U,uDA7FX,IAAMU,EAAiBtI,YAAH,KACLE,KAAK4C,MAAM8E,QAOc1H,KAAK4C,MAAMgF,MAGpC5H,KAAK4C,MAAM+E,SAUpBU,EAAcvI,YAAH,KACFE,KAAK4C,MAAM8E,QAEX1H,KAAK4C,MAAM+E,SAMpBW,EAAmBxI,YAAH,MAYhByI,EAAazI,YAAH,MAShB,OACI,uBACI,mBAAKgC,UAAU,aAAahC,IAAKsI,GAC7B,mBAAKtI,IAAKwI,GAAkB,YAAC,EAAD,CAAa1H,QAASZ,KAAK6H,OAA3B,WAC5B,YAAC,KAAD,CAA4B/F,UAAU,mBAAmBhC,IAAKyI,EAAYC,QAAS,CAACC,WAAW,CAACC,SAAU,YACtG,mBAAK5I,IAAKA,YAAF,OACHE,KAAKC,MAAMC,YAIxB,mBAAKJ,IAAKuI,Q,gDAIUpI,EAAuB2C,GAAa,IACzDf,EAAQ5B,EAAR4B,KACP,OAAIA,IAASe,EAAMf,KACR,CAACA,QAEL,S,GA9EwB1B,IAAMC,W,iMCDxBuI,G,4MACnB/F,MAAQ,CACN/B,YAAa,EAAKZ,MAAM6C,KAAKjC,YAC7B+H,QAAS,GACTC,KAAM,I,EAaR3F,cAAgB,WACiB,KAA3B,EAAKN,MAAM/B,aAA6C,KAAvB,EAAK+B,MAAMgG,SAC9CxF,MAAM,mBAAqB,EAAKR,MAAM/B,YAAc,OACjDwC,MAAK,SAACC,GAAD,OAASA,EAAIwF,UAClBzF,MAAK,SAAAP,GACJ,IAAI+F,EAAOE,GAAQjG,GACf8F,EAAUI,GAAWlG,GACzB,EAAKU,SAAS,CAAEoF,QAASA,EAASC,KAAMA,IACxCI,IAAkBhE,SAASiE,iBAAiB,OAAQ,CAAET,WAAY,CAAEC,SAAU,gB,uDAlBpF,OACE,mBAAK5G,UAAU,eAAehC,IAAKY,GACjC,YAAC,EAAD,CAASmB,KAA6B,KAAvB7B,KAAK4C,MAAMgG,UAC1B,mBAAK9I,IAAKA,YAAF,KAA2D,KAAvBE,KAAK4C,MAAMgG,QAAiB,EAAI,IAC1E,kBAAI9G,UAAU,QAAQhC,IAAKA,YAAF,OA8CnC,SAAiBgJ,EAAcK,GAC7B,IACMC,EADK,IAAIC,OAAO,OAASF,EAAQ,eACzBG,KAAKR,GACnB,OAAW,OAAPM,EACWA,EAAG,GAGT,GArDkDG,CAAQvJ,KAAK4C,MAAMiG,KAAM,UAC5E,YAAC,IAAD,CAAe9H,OAAQf,KAAK4C,MAAMgG,QAAS3H,YAAY,Q,0CAkB7DjB,KAAKkD,oB,GA9BgC/C,IAAMC,WAyC/C,SAAS2I,GAAQD,GACf,IACMM,EADS,kBACGE,KAAKR,GACvB,OAAW,OAAPM,EACKA,EAAG,GAEH,GAIX,SAASJ,GAAWF,GAGlB,OADgBA,EAAKU,QADN,kBACsB,I,6dCrDvC,IACIC,GACAC,GAFE3B,GAAU4B,cAGhBC,K,IAEqBC,G,4MACnBjH,MAAQ,CACNkH,WAAW,EACX7H,KAAMwH,GACNM,SAAUL,I,EAoCZjG,kBAAoB,WAClBW,OAAO2C,iBAAiB,WAAY,EAAKiD,YACzCf,IAAkBhE,SAASqB,KAAM,CAAEmC,WAAY,CAAEC,SAAU,a,EAE7DsB,WAAa,WACXJ,KACIH,KAAgB,EAAK7G,MAAMX,MAAQyH,KAAoB,EAAK9G,MAAMmH,UACpE,EAAKvG,SAAS,CAAEvB,KAAMwH,GAAaM,SAAUL,M,EAGjDO,cAAgB,WACd,EAAKzG,SAAS,CAAEsG,WAAW,K,EAE7BhC,cAAgB,WACd,EAAKtE,SAAS,CAAEsG,WAAW,K,EAE7B9G,YAAc,SAACC,GACb8E,GAAQE,KAAR,mBAAyBhF,EAAzB,MACA,EAAKO,SAAS,CAAEuG,SAAU,CAAElJ,YAAaoC,GAAQ6G,WAAW,K,EAE9DpE,OAAS,SAACzD,EAAc8H,GAEtB,OADA,EAAKvG,SAAS,CAAEvB,OAAM8H,aACd9H,GACN,QACA,IAAK,WACH8F,GAAQE,KAAK,O,EAInBjG,aAAe,SAACC,GACd,IAAIa,EAAO,EAAKF,MAAMmH,SACtBjH,EAAKD,WAAaZ,EAClB,EAAKuB,SAAS,CAACuG,SAAUjH,IACzBiF,GAAQE,KAAR,gBAAsBhG,K,uDAlEtB,IAAMiI,EAAoBpK,YAAH,KAGXE,KAAK4C,MAAMkH,UAAY,aAAe,OAE9B9J,KAAK4C,MAAMkH,UAAY,OAAS,QAE9CK,EAAoBrK,YAAH,MAIvB,OACE,mBAAKsK,KAAK,SACR,YAAC,IAAD,CACEC,OAAQvK,YAAF,KAEUE,KAAK4C,MAAMkH,UAAY,SAAW,UAIpD,YAAC,GAAD,CAAQvC,WAAYvH,KAAK4C,MAAMkH,UAAW7H,KAAMjC,KAAK4C,MAAMX,KAAMyD,OAAQ1F,KAAK0F,SAC9E,mBAAK5F,IAAKoK,GACR,mBAAKpK,IAAKqK,GACR,YAAC,GAAD,CAAQlI,KAAMjC,KAAK4C,MAAMX,KAAMa,KAAM9C,KAAK4C,MAAMmH,SAAU/G,YAAahD,KAAKgD,YAAahB,aAAchC,KAAKgC,gBAE9G,YAAC,EAAD,OAEF,YAAC,GAAD,CAAWH,KAAM7B,KAAK4C,MAAMkH,UAAWhC,cAAe9H,KAAK8H,cAAeC,QAASA,IAChF/H,KAAK4C,MAAMkH,UAAa,YAAC,GAAD,CAAahH,KAAM9C,KAAK4C,MAAMmH,WAAgB,S,GAnC9C5J,IAAMC,WAoFnCkK,G,uKAEF,IAAIrI,EACJ,OAAQjC,KAAKC,MAAMgC,MACjB,QACA,IAAK,WACHA,EAAO,YAAC,EAAD,CAAUe,YAAahD,KAAKC,MAAM+C,YAAahB,aAAchC,KAAKC,MAAM+B,aAAcc,KAAM9C,KAAKC,MAAM6C,OAC9G,MACF,IAAK,UACHb,EACE,YAAC,EAAD,KACE,YAAC,GAAD,CAAaa,KAAM9C,KAAKC,MAAM6C,QAKtC,OAAOb,M,GAhBU9B,IAAMC,WAoB3B,SAASwJ,KAEP,IAAiD,IAA7CxF,OAAO8D,SAAS3G,KAAKgD,QAAQ,WAAmB,CAElD,IAAIgG,EAAInG,OAAO8D,SAAS3G,KAAKiJ,MAAM,WACnCzC,GAAQE,KAAKsC,EAAE,GAAK,KAEtB,GAAInG,OAAO8D,SAASuC,SAASC,WAAW,YAAa,CACnDjB,GAAc,UACd,IAAIc,EAAInG,OAAO8D,SAASuC,SAASD,MAAM,KACvCd,GAAkB,CAAE7I,YAAa0J,EAAE,SAC9B,GAAInG,OAAO8D,SAASuC,SAASC,WAAW,SAAU,CACvDjB,GAAc,WACd,IAAIc,EAAInG,OAAO8D,SAASuC,SAASD,MAAM,KACvCd,GAAkB,CAAE7G,WAAYmB,SAASuG,EAAE,UAE3Cd,GAAc,WACdC,GAAkB,CAAE7G,WAAY,G,cC9HhB8H,QACW,cAA7BvG,OAAO8D,SAAS0C,UAEe,UAA7BxG,OAAO8D,SAAS0C,UAEhBxG,OAAO8D,SAAS0C,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF/F,SAASgG,eAAe,SDgIpB,kBAAmB5G,WACrBA,UAAU6G,cAAcC,MACrB9H,MAAK,SAAA+H,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.6b767384.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\n\r\nconst blockStyle = css`\r\n    position: relative;\r\n    border: 1px solid rgba(0,0,0,0.05);\r\n    margin: 30px 0;\r\n    padding: 20px;\r\n    background: #FFF;\r\n    outline: 3px solid transparent;\r\n    transition: 300ms;\r\n    @media screen and (min-width: 1400px) {\r\n        &:nth-of-type(odd) {\r\n            transform: translateX(10px);\r\n        }\r\n        &:nth-of-type(even) {\r\n            transform: translateX(-10px);\r\n        }\r\n        &:only-of-type {\r\n            transform: none;\r\n        }\r\n    }\r\n    @media (any-hover: hover) {\r\n        &:hover {\r\n            outline: 3px solid #000;\r\n        }\r\n    }\r\n`\r\n\r\nexport default class Block extends React.Component {\r\n    render() {\r\n        return(\r\n            <div css={blockStyle}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","const color = {\r\n    highlight: \"#337CF3\",\r\n    grey: \"#4C4C4C\",\r\n    lightGrey: \"#F3F4F5\",\r\n    red: \"#FF0000\"\r\n}\r\n\r\nexport default color","import color from './color';\r\nimport { css } from '@emotion/core';\r\nconst articleStyle = css`\r\n  font-size: 18px;\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  pre {\r\n    box-sizing: border-box;\r\n    background: ${color.lightGrey};\r\n    padding: 15px;\r\n    font-size: 0.8em;\r\n    overflow: auto;\r\n  }\r\n  code {\r\n    font-family: 'Courier Prime', 'Source Han Sans Old Style', monospace;\r\n  }\r\n  blockquote {\r\n    margin: 5px;\r\n    padding-left: 15px;\r\n    border-left: 5px solid ${color.lightGrey};\r\n    color: rgba(0,0,0,0.6);\r\n  }\r\n  a {\r\n    color: #000;\r\n    text-decoration: none;\r\n    border-bottom: 1px solid rgba(0,0,0,0.4);\r\n    @media (any-hover: hover) {\r\n        &:hover {\r\n            color: ${color.highlight};\r\n            border-bottom: 1px solid ${color.highlight};\r\n        }\r\n    }\r\n  }\r\n`\r\n\r\nexport default articleStyle;","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Block from '../block';\r\nimport articleStyle from '../article-style';\r\n\r\ntype articleBlockProps = {\r\n  title?: string;\r\n  onClick: Function;\r\n  articleName: string;\r\n  description: string;\r\n};\r\n\r\nexport default class ArticleBlock extends React.Component<articleBlockProps> {\r\n  render() {\r\n    return(\r\n      <Block>\r\n        <div>\r\n          <Title title={this.props.title} onClick={this.onClick} articleName={this.props.articleName} />\r\n          <ReactMarkdown source={this.props.description} escapeHtml={false} css={articleStyle}/>\r\n        </div>\r\n      </Block>\r\n    )\r\n  }\r\n  onClick = () => {\r\n    this.props.onClick(this.props.articleName);\r\n  }\r\n};\r\n\r\ntype titleProps = {\r\n    title?: string;\r\n    onClick?: Function;\r\n    articleName: string;\r\n};\r\n\r\nconst titleStyle = css`\r\n    display: inline-block;\r\n    z-index: 1;\r\n    position: relative;\r\n    text-decoration: none;\r\n    color: #000;\r\n    cursor: pointer;\r\n    -webkit-tap-highlight-color: transparent;\r\n    transition: 200ms;\r\n    &::after {\r\n        content: \"\";\r\n        z-index: -1;\r\n        position: absolute;\r\n        top: -4px;\r\n        left: -30px;\r\n        width: 0;\r\n        height: 100%;\r\n        transition: width 300ms, background 200ms;\r\n        background: #000;\r\n    }\r\n    @media (any-hover: hover) {\r\n        &:hover {\r\n            color: #FFF;\r\n            &::after {\r\n                width: calc(100% + 50px);\r\n            }\r\n        }\r\n    }\r\n    &:active {\r\n        color: #FFF;\r\n        &::after {\r\n            width: calc(100% + 50px);\r\n        }\r\n    }\r\n    h1 {\r\n        margin: 0 0 10px 0px;\r\n        font-size: 1.3em;\r\n    }\r\n`\r\n\r\nclass Title extends React.Component<titleProps> {\r\n    render() {\r\n        return(\r\n            <a href={`/article/${this.props.articleName}/`} css={titleStyle} onClick={this.onClick}>\r\n                <h1>{this.props.title}</h1>\r\n            </a>\r\n        )\r\n    }\r\n    onClick = (event: any) => {\r\n        event.preventDefault();\r\n        if (this.props.onClick !== undefined) this.props.onClick();\r\n    }\r\n};","/** @jsx jsx */\r\nimport { jsx, css, keyframes } from '@emotion/core';\r\nimport React from 'react';\r\nimport color from './color';\r\n\r\ntype props = {\r\n    show?: boolean;\r\n}\r\n\r\nexport default class Loading extends React.Component<props> {\r\n    render() {\r\n        const outerAnimation = keyframes`\r\n            from {\r\n                transform: rotate(0)\r\n            }\r\n            40% {\r\n                transform: rotate(0)\r\n            }\r\n            50% {\r\n                transform: rotate(-180deg)\r\n            }\r\n            90% {\r\n                transform: rotate(-180deg)\r\n            }\r\n            100% {\r\n                transform: rotate(-360deg)\r\n            }\r\n        `\r\n\r\n        const innerAnimation = keyframes`\r\n            from {\r\n                height: 40px\r\n            }\r\n            40% {\r\n                height: 0px\r\n            }\r\n            50% {\r\n                height: 40px\r\n            }\r\n            90% {\r\n                height: 0px\r\n            }\r\n            100% {\r\n                height: 40px\r\n            }\r\n        `\r\n\r\n        const loadingStyle = css`\r\n            position: absolute;\r\n            display: ${!this.props.show? \"none\" : \"block\"};\r\n            left: calc(50% - 25px);\r\n            top: calc(50% - 25px);\r\n            width: 50px;\r\n            height: 50px;\r\n            background: #000;\r\n            animation: ${outerAnimation} 4s ease infinite;\r\n            &::after {\r\n                content: \"\";\r\n                position: absolute;\r\n                left: 5px;\r\n                top: 5px;\r\n                height: 40px;\r\n                width: 40px;\r\n                background: ${color.highlight};\r\n                animation: ${innerAnimation} 4s ease infinite;\r\n            }\r\n        `\r\n\r\n        return(\r\n            <div className=\"loading\" css={loadingStyle}></div>\r\n        )\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React from 'react';\r\n\r\ninterface navProps {\r\n  toPageNumber: Function;\r\n  currentPage: number;\r\n  totalPage: number;\r\n  show?: boolean;\r\n  url: string;\r\n}\r\n\r\nexport default class PageNav extends React.Component<navProps> {\r\n  render() {\r\n    let num = [0,0,0,0,0];\r\n    if (this.props.currentPage - 2 >= 1) {\r\n      num[0] = this.props.currentPage - 2;\r\n    } else if (this.props.currentPage - 1 >= 1) { \r\n      num[0] = this.props.currentPage - 1;\r\n    } else {\r\n      num[0] = this.props.currentPage;\r\n    }\r\n\r\n    for (let i=1; i<5; i++) {\r\n      if (num[i-1] + 1 <= this.props.totalPage) {\r\n        num[i] = num[i-1] + 1;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div css={css`display: ${this.props.totalPage === 0? \"none\" : \"block\"}; width: 100%; text-align: center;`}>\r\n        <div css={css`display: inline-block;`}>\r\n          <PageNumber num={\"<\"} />\r\n          <PageNumber num={num[0].toString()} onClick={()=>{this.toPageNumber(num[0])}} url={this.props.url + \"page/\" + num[0]} selected={this.props.currentPage === num[0]? true : false} />\r\n          <PageNumber num={num[1].toString()} onClick={()=>{this.toPageNumber(num[1])}} url={this.props.url + \"page/\" + num[1]} selected={this.props.currentPage === num[1]? true : false} />\r\n          <PageNumber num={num[2].toString()} onClick={()=>{this.toPageNumber(num[2])}} url={this.props.url + \"page/\" + num[2]} selected={this.props.currentPage === num[2]? true : false}/>\r\n          <PageNumber num={num[3].toString()} onClick={()=>{this.toPageNumber(num[3])}} url={this.props.url + \"page/\" + num[3]} selected={this.props.currentPage === num[3]? true : false} />\r\n          <PageNumber num={num[4].toString()} onClick={()=>{this.toPageNumber(num[4])}} url={this.props.url + \"page/\" + num[4]} selected={this.props.currentPage === num[4]? true : false} />\r\n          <PageNumber num={\">\"} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  toPageNumber = (page: number) => {\r\n    if (page !== 0) {\r\n      this.props.toPageNumber(page);\r\n    }\r\n  }\r\n}\r\n\r\ninterface numProps {\r\n  num: string;\r\n  selected?: boolean;\r\n  onClick?: Function;\r\n  url?: string;\r\n}\r\n\r\nclass PageNumber extends React.Component<numProps> {\r\n  render() {\r\n    const numberStyle = css`\r\n      display: ${this.props.num === \"0\"? \"none\" : \"inline-block\"};\r\n      padding: 0 10px;\r\n      text-align: center;\r\n      color: ${this.props.selected? \"#000\" : \"#FFF\"};\r\n      -webkit-text-stroke: ${this.props.selected? \"0px\" : \"2px\"} black;  \r\n      -webkit-text-fill-color : ${this.props.selected? \"#000\" : \"transparent\"};\r\n      -webkit-tap-highlight-color: transparent;\r\n      font-weight: bold;\r\n      font-size: 50px;\r\n      text-decoration: none;\r\n      &:nth-of-type(odd) {\r\n        transform: translateY(5px);\r\n      }\r\n      &:nth-of-type(even) {\r\n        transform: translateY(-5px);\r\n      }\r\n      @media (any-hover: hover) {\r\n        &:hover {\r\n          -webkit-text-stroke: 0px;  \r\n          -webkit-text-fill-color : #000;\r\n        }\r\n      }\r\n      &:active {\r\n        -webkit-text-stroke: 0px;  \r\n        -webkit-text-fill-color : #000;\r\n      }\r\n    `\r\n    return(\r\n      <a href={this.props.url} css={numberStyle} onClick={this.onClick}>{this.props.num}</a>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    event.preventDefault();\r\n    if (this.props.onClick !== undefined) {\r\n      this.props.onClick();\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport ArticleBlock from '../comp/article-list/article-block';\r\nimport Loading from '../comp/loading';\r\nimport PageNav from '../comp/page-nav';\r\n\r\ntype homepageProps = {\r\n  openArticle: Function;\r\n  toPageNumber: Function;\r\n  data: any;\r\n}\r\n\r\nexport default class Homepage extends React.Component<homepageProps> {\r\n  state = {\r\n    pageNumber: this.props.data.pageNumber,\r\n    articleList: [],\r\n    totalPage: 0\r\n  }\r\n  render() {\r\n    let list = null;\r\n    if (this.state.articleList !== []) {\r\n      list = this.state.articleList.map((item: any) => (\r\n        <ArticleBlock key={item.fileName} title={item.title} articleName={item.fileName} description={item.description} onClick={this.openArticle} />\r\n      ))\r\n    }\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Loading show={this.state.articleList.length === 0? true : false} />\r\n        {list}\r\n        <PageNav currentPage={parseInt(this.state.pageNumber)} toPageNumber={this.props.toPageNumber} totalPage={this.state.totalPage} url={\"/\"} />\r\n      </div>\r\n    )\r\n  }\r\n  openArticle = (name: string) => {\r\n    this.props.openArticle(name);\r\n  }\r\n  updateContent = () => {\r\n    if (this.state.articleList.length === 0 && this.state.pageNumber !== undefined) {\r\n      fetch(\"/source/homepage/\" + this.state.pageNumber + \".json\")\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((json) => {\r\n          this.setState({articleList: json})\r\n        })\r\n\r\n      fetch(\"/source/homepage/homepage.json\")\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((json) => {\r\n          this.setState({totalPage: json.page})\r\n        })\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    this.updateContent();\r\n  }\r\n  componentDidUpdate = () => {\r\n    this.updateContent();\r\n  }\r\n  static getDerivedStateFromProps(props: homepageProps, state: any) {\r\n    const {data} = props;\r\n    if (data.pageNumber !== state.pageNumber) {\r\n      return {pageNumber: data.pageNumber, articleList: []};\r\n    }\r\n    return null;\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport color from './color';\r\n\r\nconst footerStyle = css`\r\n    max-width: 1300px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    color: ${color.grey};\r\n`\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div css={footerStyle}>\r\n                © 2020 Nanoscale\r\n            </div>\r\n        )\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nconst UA = window.navigator.userAgent;\r\nconst isFF = UA.indexOf(\"Firefox\") !== -1;\r\n\r\ntype leftMenuProps = {\r\n    left: number,\r\n    transition: boolean\r\n}\r\n\r\nexport default class LeftMenu extends React.Component<leftMenuProps> {\r\n    state = {\r\n        left: this.props.left,\r\n        transition: this.props.transition\r\n    }\r\n    render() {\r\n        const leftMenuStyle = css`\r\n            position: fixed;\r\n            z-index: 997;\r\n            top: 0;\r\n            left: ${this.state.left + \"px\"};\r\n            width: 300px;\r\n            height: calc(100% + 50px);\r\n            background: ${isFF? \"#FFF\" : \"rgba(255,255,255,0.7)\"};\r\n            backdrop-filter: blur(15px) saturate(180%);\r\n            border-right: 1px solid rgba(0,0,0,0.05);\r\n            transition: width 300ms ${this.state.transition? \", left 350ms\" : \"\"};\r\n            @media screen and (max-width: 500px) {\r\n                width: 100%;\r\n                left: ${this.state.left};\r\n            }\r\n        `\r\n        return(\r\n            <div css={leftMenuStyle}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    static getDerivedStateFromProps(props: leftMenuProps, state: any) {\r\n        const {left, transition} = props;\r\n        if (left !== state.left) {\r\n            return {left};\r\n        }\r\n        if (transition !== state.transition) {\r\n            return {transition};\r\n        }\r\n        return null;\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\n\r\nconst roundButtonStyle = css`\r\n  position: relative;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: center; \r\n  align-items: center;\r\n  height: 40px;\r\n  width: 40px;\r\n  background: none;\r\n  transition: 200ms;\r\n  border: none;\r\n  outline: none;\r\n  user-select: none;\r\n  &::after {\r\n    position: absolute;\r\n    z-index: -1;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 50%;\r\n    top: 50%;\r\n    background: #000;\r\n    transform: translate(-50%, -50%) scale(0);\r\n  }\r\n  &:focus {\r\n    border: 2px solid #000;\r\n  }\r\n  &:hover {\r\n    color: #FFF;\r\n    border: none !important;\r\n    span {\r\n      background: #FFF;\r\n    }\r\n    &::after {\r\n      transition: 300ms;\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n  }\r\n  &:active {\r\n    color: #FFF;\r\n    border: none !important;\r\n    transform: scale(0.9);\r\n    span {\r\n      background: #FFF;\r\n    }\r\n    &::after {\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n  }\r\n`\r\n\r\ntype roundButtonProps = {\r\n  className?: string;\r\n  onClick?: Function;\r\n}\r\n\r\nexport default class RoundButton extends React.Component<roundButtonProps> {\r\n  private btnRef = React.createRef<any>();\r\n  render() {\r\n    return(\r\n      <button className={this.props.className} ref={this.btnRef} css={roundButtonStyle} onClick={this.onClick}>\r\n        {this.props.children}\r\n      </button>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    if (this.props.onClick !== undefined) this.props.onClick();\r\n    if (event.detail && document.activeElement !== null) {\r\n      this.btnRef.current.blur();\r\n    }\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport RoundButton from '../round-btn';\r\nconst UA = window.navigator.userAgent;\r\nconst isFF = UA.indexOf(\"Firefox\") !== -1;\r\n\r\ninterface topBarProps {\r\n  toggleLeftMenu: Function;\r\n  leftMenuLeft: number;\r\n  hide?: boolean;\r\n  page: string;\r\n  toPage: Function;\r\n}\r\n\r\nexport default class TopBar extends React.Component<topBarProps> {\r\n  render() {\r\n    const topBarContainerStyle = css`\r\n      display: ${this.props.hide ? \"none\" : \"block\"};\r\n      position: fixed;\r\n      z-index: 998;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 40px;\r\n      background: ${isFF ? \"#FFF\" : \"rgba(255,255,255,0.8)\"};\r\n      backdrop-filter: blur(10px) saturate(180%);\r\n      border-bottom: 1px solid rgba(0,0,0,0.05);\r\n      white-space: nowrap;\r\n    `\r\n    const topBarInnerStyle = css`\r\n      display: flex;\r\n      max-width: 1300px;\r\n      margin: 0 auto;\r\n    `\r\n    const topBarItemContainerStyle = css`\r\n      display: flex;\r\n      width: calc(100% - 40px);\r\n      overflow-x: auto;\r\n      overflow-y: hidden;\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      @media screen and (max-width: 1400px) {\r\n        margin-left: 40px;\r\n        mask-image: -webkit-linear-gradient(right, transparent, black 20px);\r\n      }\r\n    `\r\n\r\n    return (\r\n      <div>\r\n        <MenuButton onClick={this.props.toggleLeftMenu} leftMenuLeft={this.props.leftMenuLeft} />\r\n        <div css={topBarContainerStyle}>\r\n          <div css={topBarInnerStyle}>\r\n            <div css={topBarItemContainerStyle}>\r\n              <Item href={\"/\"} title=\"homepage\" onClick={() => { this.navOnClick(\"homepage\") }} selected={this.props.page === \"homepage\" ? true : false} />\r\n              <Item title=\"categories\" />\r\n              <Item title=\"tags\" />\r\n              <Item title=\"about\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  menuOnClick = () => {\r\n    this.props.toggleLeftMenu();\r\n  }\r\n  navOnClick = (page: string) => {\r\n    this.props.toPage(page, { pageNumber: 1 });\r\n  }\r\n}\r\n\r\ntype itemProps = {\r\n  title: string;\r\n  href?: string;\r\n  selected?: boolean;\r\n  onClick?: Function;\r\n}\r\n\r\nconst itemStyle = css`\r\n  position: relative;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  text-decoration: none;\r\n  font-family: 'Secular One', 'Source Han Sans Old Style', sans-serif;\r\n  padding: 0 15px;\r\n  cursor: pointer;\r\n  transition: 200ms;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  -webkit-tap-highlight-color: transparent;\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      background: rgba(0,0,0,0.1);\r\n    }\r\n  }\r\n  &:active {\r\n    background: rgba(0,0,0,0.2);\r\n  }\r\n  &.selected {\r\n    border-bottom: 2px solid #000;\r\n  }\r\n`\r\n\r\nclass Item extends React.Component<itemProps> {\r\n  render() {\r\n    return (\r\n      <a css={itemStyle} href={this.props.href} className={\"top-bar-item\" + (this.props.selected ? \" selected\" : \"\")} onClick={this.onClick}>\r\n        {this.props.title}\r\n      </a>\r\n    )\r\n  }\r\n  onClick = (event: any) => {\r\n    event.preventDefault();\r\n    if (this.props.onClick !== undefined) this.props.onClick();\r\n  }\r\n}\r\n\r\ntype menuButtonProps = {\r\n  onClick: Function;\r\n  leftMenuLeft: number;\r\n}\r\n\r\nconst menuButtonStyle = css`\r\n    position: fixed;\r\n    z-index: 999;\r\n    top: 0;\r\n`\r\n\r\nclass MenuButton extends React.Component<menuButtonProps> {\r\n  render() {\r\n    const spanStyle = `height: 2px; width: 20px; background: #000; margin: 2px 2px; transition: 200ms; `;\r\n    const width = document.body.clientWidth <= 500 ? document.body.clientWidth : 300;\r\n    const progress = 1 - Math.abs(this.props.leftMenuLeft) / width;\r\n    // console.log(progress);\r\n    return (\r\n      <div css={menuButtonStyle}>\r\n        <RoundButton onClick={this.onClick}>\r\n          <div css={css`display: flex; flex-direction: column;`}>\r\n            <span css={css`${spanStyle} transform: rotate(${-45 * progress}deg) scale(${1 - 0.52 * progress}, 0.9) translate(${-14 * progress}px, ${-2.5 * progress}px); `}></span>\r\n            <span css={css`${spanStyle} transform: scale(${1 - 0.1 * progress}, 0.9)`}></span>\r\n            <span css={css`${spanStyle} transform: rotate(${45 * progress}deg) scale(${1 - 0.52 * progress}, 0.9) translate(${-14 * progress}px, ${2.5 * progress}px); `}></span>\r\n          </div>\r\n        </RoundButton>\r\n      </div>\r\n    )\r\n  }\r\n  onClick = () => {\r\n    this.props.onClick();\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport LeftMenu from './left-menu';\r\nimport TopBar from './top-bar';\r\n\r\ninterface headerProps {\r\n    hideTopBar?: boolean;\r\n    page: string;\r\n    toPage: Function;\r\n}\r\n\r\nexport default class Header extends React.Component<headerProps> {\r\n    state = {\r\n        leftMenuLeft: 0,\r\n        width: document.body.clientWidth <= 500? document.body.clientWidth : 300,\r\n        transition: true\r\n    }\r\n    render() {\r\n        const swipeAreaStyle = css`\r\n            position: fixed;\r\n            z-index: 998;\r\n            height: 100%;\r\n            top: 0;\r\n            left: ${this.state.leftMenuLeft === 0? this.state.width - 10 + \"px\" : \"0\"};\r\n            width: 10px;\r\n        `\r\n\r\n        return(\r\n            <div>\r\n                <TopBar toggleLeftMenu={this.toggleLeftMenu} leftMenuLeft={this.state.leftMenuLeft} hide={this.props.hideTopBar} page={this.props.page} toPage={this.props.toPage} />\r\n                <LeftMenu left={this.state.leftMenuLeft} transition={this.state.transition} />\r\n                <div css={swipeAreaStyle} onTouchStart={this.touchStart}></div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount = () => {\r\n        this.onResize();\r\n        window.onresize = this.onResize;\r\n    }\r\n    onResize = () => {\r\n        const width = document.body.clientWidth <= 500? document.body.clientWidth : 300;\r\n        this.setState({leftMenuLeft: -width, width: width});\r\n    }\r\n    toggleLeftMenu = () => {\r\n        if (this.state.leftMenuLeft === -this.state.width) {\r\n            this.setState({leftMenuLeft: 0})\r\n        } else {\r\n            this.setState({leftMenuLeft: -this.state.width})\r\n        }\r\n    }\r\n    touchStart = () =>{\r\n        if (this.state.transition) this.setState({transition: false});\r\n        document.addEventListener('touchmove', this.touchMove);\r\n        document.addEventListener('touchend', this.touchEnd);\r\n    }\r\n    touchMove = (event: any) => {\r\n        let left: number;\r\n        left = (event.changedTouches[0].clientX - this.state.width);\r\n        if (event.changedTouches[0].clientX - this.state.width > 0) left = 0;\r\n        if (this.state.leftMenuLeft !== left) {\r\n            this.setState({leftMenuLeft: left});\r\n            this.forceUpdate();\r\n        }\r\n        // console.log(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\r\n    }\r\n    touchEnd = (event: any) => {\r\n        if (!this.state.transition) this.setState({transition: true});\r\n        if (event.changedTouches[0].clientX < this.state.width / 2) this.setState({leftMenuLeft: -this.state.width});\r\n        if (event.changedTouches[0].clientX >= this.state.width / 2) this.setState({leftMenuLeft: 0});\r\n        document.removeEventListener('touchmove', this.touchMove);\r\n        document.removeEventListener('touchend', this.touchEnd);\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\nimport { BrowserHistory } from 'history';\r\nimport RoundButton from './round-btn';\r\n\r\ntype hoverPageProps = {\r\n    show: boolean;\r\n    hideHoverPage: Function;\r\n    history: BrowserHistory;\r\n}\r\n\r\nexport default class HoverPage extends React.Component<hoverPageProps> {\r\n    state = {\r\n        show: this.props.show,\r\n        display: \"none\",\r\n        opacity: 0,\r\n        scale: 1.1\r\n    }\r\n    render() {\r\n        const hoverPageStyle = css`\r\n            display: ${this.state.display};\r\n            position: fixed;\r\n            z-index: 996;\r\n            height: 100%;\r\n            width: 1170px;\r\n            top: 0;\r\n            left: 50%;\r\n            transform: translateX(-50%) scale(${this.state.scale});\r\n            border-left: 5px solid #000;\r\n            border-right: 5px solid #000;\r\n            opacity: ${this.state.opacity};\r\n            transition: 300ms;\r\n            background: #FFF;\r\n            @media screen and (max-width: 1300px) {\r\n                width: 90%;\r\n            }\r\n            @media screen and (max-width: 800px) {\r\n                width: 100%;\r\n            }\r\n        `\r\n        const shadowStyle = css`\r\n            display: ${this.state.display};\r\n            position: fixed;\r\n            opacity: ${this.state.opacity};\r\n            width: 100%;\r\n            height: 100%;\r\n            top: 0;\r\n            background: rgba(0,0,0,0.1);\r\n        `\r\n        const closeButtonStyle = css`\r\n            z-index: 1;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n            button {\r\n                font-family: \"iconfont\";\r\n                font-size: 24px;\r\n                color: #000;\r\n            }\r\n        `\r\n\r\n        const innerStyle = css`\r\n            height: 100%;\r\n            padding: 0 30px;\r\n            overflow: auto;\r\n            @media screen and (max-width: 800px) {\r\n                padding: 0 20px;\r\n            }\r\n        `\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"hover-page\" css={hoverPageStyle}>\r\n                    <div css={closeButtonStyle}><RoundButton onClick={this.close}>&#xe615;</RoundButton></div>\r\n                    <OverlayScrollbarsComponent className=\"hover-page-inner\" css={innerStyle} options={{scrollbars:{autoHide: 'scroll'}}} >\r\n                        <div css={css`padding-top: 40px; padding-bottom: 20px`}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </OverlayScrollbarsComponent>\r\n                </div>\r\n                <div css={shadowStyle}></div>\r\n            </div>\r\n        )\r\n    }\r\n    static getDerivedStateFromProps(props: hoverPageProps, state: any) {\r\n        const {show} = props;\r\n        if (show !== state.show) {\r\n            return {show};\r\n        }\r\n        return null;\r\n    }\r\n    close = () => {\r\n        this.props.hideHoverPage();\r\n        this.props.history.back();\r\n    }\r\n    back = () => {\r\n        this.props.history.push(window.location.href);\r\n        this.close();\r\n    }\r\n    componentDidUpdate = () => {\r\n        if (this.state.show && this.state.opacity !== 1 && this.state.display !== \"block\") {\r\n            window.addEventListener('popstate', this.back);\r\n            this.setState({display: \"block\"}, ()=>{\r\n                setTimeout(()=>{\r\n                    this.setState({opacity: 1, scale: 1})\r\n                })\r\n            })\r\n        } else if (!this.state.show && this.state.opacity !== 0 && this.state.display !== \"none\") {\r\n            window.removeEventListener('popstate', this.back);\r\n            this.setState({opacity: 0, scale: 1.1}, ()=>{\r\n                setTimeout(()=>{\r\n                    this.setState({display: \"none\"});\r\n                }, 300)\r\n            })\r\n        }\r\n    }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\nimport articleStyle from '../comp/article-style';\r\nimport Loading from '../comp/loading';\r\n\r\ninterface articlePageProps {\r\n  data: any;\r\n}\r\n\r\nexport default class ArticlePage extends React.Component<articlePageProps> {\r\n  state = {\r\n    articleName: this.props.data.articleName,\r\n    content: \"\",\r\n    head: \"\"\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"article-page\" css={articleStyle}>\r\n        <Loading show={this.state.content === \"\" ? true : false} />\r\n        <div css={css`transition: 300ms; opacity: ${this.state.content === \"\" ? 0 : 1}`}>\r\n          <h1 className=\"title\" css={css`font-size: 2.2em`}>{getInfo(this.state.head, \"title\")}</h1>\r\n          <ReactMarkdown source={this.state.content} escapeHtml={false} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  updateContent = () => {\r\n    if (this.state.articleName !== \"\" && this.state.content === \"\") {\r\n      fetch(\"/source/article/\" + this.state.articleName + \".md\")\r\n        .then((res) => res.text())\r\n        .then(data => {\r\n          let head = getHead(data);\r\n          let content = getContent(data);\r\n          this.setState({ content: content, head: head });\r\n          OverlayScrollbars(document.querySelectorAll(\"pre\"), { scrollbars: { autoHide: 'scroll' } });\r\n        })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.updateContent();\r\n  }\r\n  // static getDerivedStateFromProps(props: articlePageProps, state: any) {\r\n  //     const {articleName} = props;\r\n  //     if (articleName !== state.articleName) {\r\n  //         return {articleName, content: \"\", head: \"\"};\r\n  //     }\r\n  //     return null;\r\n  // }\r\n}\r\n\r\nfunction getHead(text: string) {\r\n  const headRe = /<!--[\\s\\S]*?-->/;\r\n  const ex = headRe.exec(text);\r\n  if (ex !== null) {\r\n    return ex[0];\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction getContent(text: string) {\r\n  const headRe = /<!--[\\s\\S]*?-->/;\r\n  const content = text.replace(headRe, \"\");\r\n  return content;\r\n}\r\n\r\nfunction getInfo(text: string, label: string) {\r\n  const re = new RegExp(\"(?<=\" + label + \":\\\\s*)\\\\S.*\");\r\n  const ex = re.exec(text);\r\n  if (ex !== null) {\r\n    const info = ex[0];\r\n    return info;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}","/** @jsx jsx */\r\nimport { jsx, css, Global } from '@emotion/core'\r\nimport React from 'react';\r\nimport { createBrowserHistory } from 'history';\r\nimport OverlayScrollbars from 'overlayscrollbars';\r\nimport Homepage from '../page/homepage';\r\nimport Footer from './footer';\r\nimport Header from './header/header';\r\nimport HoverPage from './hover-page';\r\nimport ArticlePage from '../page/article';\r\nimport Block from './block';\r\n\r\nconst history = createBrowserHistory();\r\nlet initialPage: string;\r\nlet initialPageData: any;\r\nrouter();\r\n\r\nexport default class Frame extends React.Component {\r\n  state = {\r\n    hoverPage: false,\r\n    page: initialPage,\r\n    pageData: initialPageData\r\n  }\r\n  render() {\r\n    const contentOuterStyle = css`\r\n      margin: 0 auto;\r\n      max-width: 1300px;\r\n      filter: ${this.state.hoverPage ? \"blur(10px)\" : \"none\"};\r\n      transition: filter 300ms;\r\n      pointer-events: ${this.state.hoverPage ? \"none\" : \"auto\"};\r\n    `\r\n    const contentInnerStyle = css`\r\n      margin-top: 70px;\r\n      width: 100%;\r\n    `\r\n    return (\r\n      <div lang=\"zh-TW\">\r\n        <Global\r\n          styles={css`\r\n            body {\r\n              overflow: ${this.state.hoverPage ? \"hidden\" : \"auto\"};\r\n            }\r\n          `}\r\n        />\r\n        <Header hideTopBar={this.state.hoverPage} page={this.state.page} toPage={this.toPage} />\r\n        <div css={contentOuterStyle}>\r\n          <div css={contentInnerStyle}>\r\n            <Switch page={this.state.page} data={this.state.pageData} openArticle={this.openArticle} toPageNumber={this.toPageNumber} />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        <HoverPage show={this.state.hoverPage} hideHoverPage={this.hideHoverPage} history={history}>\r\n          {this.state.hoverPage ? (<ArticlePage data={this.state.pageData} />) : \"\"}\r\n        </HoverPage>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount = () => {\r\n    window.addEventListener('popstate', this.urlChanged);\r\n    OverlayScrollbars(document.body, { scrollbars: { autoHide: 'scroll' } });\r\n  }\r\n  urlChanged = () => {\r\n    router();\r\n    if (initialPage !== this.state.page || initialPageData !== this.state.pageData) {\r\n      this.setState({ page: initialPage, pageData: initialPageData });\r\n    }\r\n  }\r\n  showHoverPage = () => {\r\n    this.setState({ hoverPage: true });\r\n  }\r\n  hideHoverPage = () => {\r\n    this.setState({ hoverPage: false });\r\n  }\r\n  openArticle = (name: string) => {\r\n    history.push(`/article/${name}/`);\r\n    this.setState({ pageData: { articleName: name }, hoverPage: true })\r\n  }\r\n  toPage = (page: string, pageData: any) => {\r\n    this.setState({ page, pageData });\r\n    switch (page) {\r\n      default:\r\n      case \"homepage\":\r\n        history.push('/');\r\n        break;\r\n    }\r\n  }\r\n  toPageNumber = (page: number) => {\r\n    let data = this.state.pageData;\r\n    data.pageNumber = page;\r\n    this.setState({pageData: data});\r\n    history.push(`/page/${page}`);\r\n  }\r\n}\r\n\r\ntype switchProps = {\r\n  page: string;\r\n  openArticle: Function;\r\n  toPageNumber: Function;\r\n  data: any;\r\n}\r\n\r\nclass Switch extends React.Component<switchProps> {\r\n  render() {\r\n    let page;\r\n    switch (this.props.page) {\r\n      default:\r\n      case \"homepage\":\r\n        page = <Homepage openArticle={this.props.openArticle} toPageNumber={this.props.toPageNumber} data={this.props.data} />;\r\n        break;\r\n      case \"article\":\r\n        page = (\r\n          <Block>\r\n            <ArticlePage data={this.props.data} />\r\n          </Block>\r\n        )\r\n        break;\r\n    }\r\n    return page;\r\n  }\r\n}\r\n\r\nfunction router() {\r\n  // console.log(window.location.hostname, window.location.href);\r\n  if (window.location.href.indexOf(\"/?jump=\") !== -1) {\r\n    // console.log(\"jump\");\r\n    let a = window.location.href.split(\"/?jump=\");\r\n    history.push(a[1] + \"?\");\r\n  }\r\n  if (window.location.pathname.startsWith(\"/article\")) {\r\n    initialPage = \"article\";\r\n    let a = window.location.pathname.split(\"/\");\r\n    initialPageData = { articleName: a[2] }\r\n  } else if (window.location.pathname.startsWith(\"/page\")) {\r\n    initialPage = \"homepage\";\r\n    let a = window.location.pathname.split(\"/\");\r\n    initialPageData = { pageNumber: parseInt(a[2]) };\r\n  } else {\r\n    initialPage = \"homepage\";\r\n    initialPageData = { pageNumber: 1 };\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Frame from './comp/frame';\nimport './OverlayScrollbars.css';\nimport './main.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Frame />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}