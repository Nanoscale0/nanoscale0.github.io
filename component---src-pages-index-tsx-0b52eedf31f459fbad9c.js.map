{"version":3,"sources":["webpack:///./node_modules/@researchgate/react-intersection-observer/lib/es/utils.js","webpack:///./node_modules/@researchgate/react-intersection-observer/lib/es/observer.js","webpack:///./node_modules/@researchgate/react-intersection-observer/lib/es/IntersectionObserver.js","webpack:///./src/components/post-list.tsx","webpack:///./src/pages/index.tsx"],"names":["marginRE","shallowCompare","next","prev","Array","isArray","length","some","_","index","Object","prototype","hasOwnProperty","toString","isChildrenWithRef","children","call","observerElementsMap","Map","getPooled","options","observer","root","rootMargin","result","trim","split","map","margin","test","Error","m0","shift","_a","m1","_b","m2","_c","parseRootMargin","threshold","observers","keys","value","thresholds","findObserverElement","entry","elements","get","values","element","target","callback","entries","i","handleChange","createObserver","pooled","IntersectionObserver","set","Set","observeElement","has","add","observe","unobserveElement","targets","delete","size","unobserve","disconnect","_extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","__","this","constructor","create","observerOptions","observableProps","props","reduce","key","isRootString","assign","document","querySelector","_super","ReactIntersectionObserver","_this","apply","arguments","event","onChange","externalUnobserve","handleNode","childenRef","ref","current","targetNode","undefined","nodeType","disabled","getSnapshotBeforeUpdate","prevProps","prevTargetNode","relatedPropsChanged","prop","componentDidUpdate","targetNodeChanged","componentDidMount","componentWillUnmount","render","cloneElement","Children","only","displayName","Component","PostList","data","item","PostItem","id","useState","isObservered","setIsObservered","likeCount","setLikeCount","commentCount","setCommentCount","postPath","useEffect","getLikeCount","then","count","getCommentCount","isIntersecting","css","frontmatter","title","to","styles","postStyle","dangerouslySetInnerHTML","__html","description","excerpt","fbar","path","style","marginLeft","setCount","IndexPage","transitionTime","site","siteMetadata","allMarkdownRemark","nodes"],"mappings":"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","file":"component---src-pages-index-tsx-0b52eedf31f459fbad9c.js","sourcesContent":["var _a;\n\nvar marginRE = /^-?\\d*\\.?\\d+(px|%)$/;\nexport function parseRootMargin(rootMargin) {\n  var marginString = rootMargin ? rootMargin.trim() : '0px';\n  var result = marginString.split(/\\s+/).map(function (margin) {\n    if (!marginRE.test(margin)) {\n      throw new Error('rootMargin must be a string literal containing pixels and/or percent values');\n    }\n\n    return margin;\n  });\n  var m0 = result.shift();\n  var _a = result[0],\n      m1 = _a === void 0 ? m0 : _a,\n      _b = result[1],\n      m2 = _b === void 0 ? m0 : _b,\n      _c = result[2],\n      m3 = _c === void 0 ? m1 : _c;\n  return m0 + \" \" + m1 + \" \" + m2 + \" \" + m3;\n}\nexport function shallowCompare(next, prev) {\n  if (Array.isArray(next) && Array.isArray(prev)) {\n    if (next.length === prev.length) {\n      return next.some(function (_, index) {\n        return shallowCompare(next[index], prev[index]);\n      });\n    }\n  }\n\n  return next !== prev;\n}\nexport var hasOwnProperty = (_a = Object.prototype, _a.hasOwnProperty),\n    toString = _a.toString;\nexport function isChildrenWithRef(children) {\n  return children && hasOwnProperty.call(children, 'ref');\n}\nexport function thresholdCacheKey(threshold) {\n  if (!threshold || typeof threshold === 'number') {\n    return threshold;\n  }\n\n  return threshold.join(',');\n}","import { parseRootMargin, shallowCompare } from './utils';\nexport var observerElementsMap = new Map();\nexport function getPooled(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var root = options.root || null;\n  var rootMargin = parseRootMargin(options.rootMargin);\n  var threshold = Array.isArray(options.threshold) ? options.threshold : [options.threshold != null ? options.threshold : 0];\n  var observers = observerElementsMap.keys();\n  var observer;\n\n  while (observer = observers.next().value) {\n    var unmatched = root !== observer.root || rootMargin !== observer.rootMargin || shallowCompare(threshold, observer.thresholds);\n\n    if (!unmatched) {\n      return observer;\n    }\n  }\n\n  return null;\n}\nexport function findObserverElement(observer, entry) {\n  var elements = observerElementsMap.get(observer);\n\n  if (elements) {\n    var values = elements.values();\n    var element = void 0;\n\n    while (element = values.next().value) {\n      if (element.target === entry.target) {\n        return element;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * The Intersection Observer API callback that is called whenever one element\n * – namely the target – intersects either the device viewport or a specified element.\n * Also will get called whenever the visibility of the target element changes and\n * crosses desired amounts of intersection with the root.\n */\n\nexport function callback(entries, observer) {\n  for (var i = 0; i < entries.length; i++) {\n    var element = findObserverElement(observer, entries[i]);\n    /* istanbul ignore next line */\n\n    if (element) {\n      element.handleChange(entries[i]);\n    }\n  }\n}\nexport function createObserver(options) {\n  var pooled = getPooled(options);\n\n  if (pooled) {\n    return pooled;\n  }\n\n  var observer = new IntersectionObserver(callback, options);\n  observerElementsMap.set(observer, new Set());\n  return observer;\n}\nexport function observeElement(element) {\n  var _a;\n\n  if (element.observer && !observerElementsMap.has(element.observer)) {\n    observerElementsMap.set(element.observer, new Set());\n  }\n\n  (_a = observerElementsMap.get(element.observer)) === null || _a === void 0 ? void 0 : _a.add(element);\n  element.observer.observe(element.target);\n}\nexport function unobserveElement(element, target) {\n  if (observerElementsMap.has(element.observer)) {\n    var targets = observerElementsMap.get(element.observer);\n\n    if (targets === null || targets === void 0 ? void 0 : targets.delete(element)) {\n      if (targets.size > 0) {\n        element.observer.unobserve(target);\n      } else {\n        element.observer.disconnect();\n        observerElementsMap.delete(element.observer);\n      }\n    }\n  }\n}","import \"core-js/modules/es.array.reduce.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createObserver, observeElement, unobserveElement } from './observer';\nimport { shallowCompare, isChildrenWithRef, hasOwnProperty, toString } from './utils';\nvar observerOptions = ['root', 'rootMargin', 'threshold'];\nvar observableProps = ['root', 'rootMargin', 'threshold', 'disabled'];\nexport var getOptions = function getOptions(props) {\n  return observerOptions.reduce(function (options, key) {\n    var _a;\n\n    var isRootString = key === 'root' && toString.call(props.root) === '[object String]';\n    return Object.assign(options, (_a = {}, _a[key] = isRootString ? document.querySelector(props[key]) : props[key], _a));\n  }, {});\n};\n\nvar ReactIntersectionObserver =\n/** @class */\nfunction (_super) {\n  __extends(ReactIntersectionObserver, _super);\n\n  function ReactIntersectionObserver() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event, _this.externalUnobserve);\n    };\n\n    _this.handleNode = function (target) {\n      var children = _this.props.children;\n      /**\n       * Forward hijacked ref to user.\n       */\n\n      if (isChildrenWithRef(children)) {\n        var childenRef = children.ref;\n\n        if (typeof childenRef === 'function') {\n          childenRef(target);\n        } else if (childenRef && hasOwnProperty.call(childenRef, 'current')) {\n          /*\n           * The children ref.current is read-only, we aren't allowed to do this, so\n           * in future release it has to go away, and the ref shall be\n           * forwarded and assigned to a DOM node by the user.\n           */\n          childenRef.current = target;\n        }\n      }\n\n      _this.targetNode = undefined;\n\n      if (target) {\n        var targetNode = findDOMNode(target);\n\n        if (targetNode && targetNode.nodeType === 1) {\n          _this.targetNode = targetNode;\n        }\n      }\n    };\n\n    _this.observe = function () {\n      if (_this.props.children == null || _this.props.disabled) {\n        return false;\n      }\n\n      if (!_this.targetNode) {\n        throw new Error(\"ReactIntersectionObserver: Can't find DOM node in the provided children. Make sure to render at least one DOM node in the tree.\");\n      }\n\n      _this.observer = createObserver(getOptions(_this.props));\n      _this.target = _this.targetNode;\n      observeElement(_this);\n      return true;\n    };\n\n    _this.unobserve = function (target) {\n      unobserveElement(_this, target);\n    };\n\n    _this.externalUnobserve = function () {\n      if (_this.targetNode) {\n        _this.unobserve(_this.targetNode);\n      }\n    };\n\n    return _this;\n  }\n\n  ReactIntersectionObserver.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n    var _this = this;\n\n    this.prevTargetNode = this.targetNode;\n    var relatedPropsChanged = observableProps.some(function (prop) {\n      return shallowCompare(_this.props[prop], prevProps[prop]);\n    });\n\n    if (relatedPropsChanged) {\n      if (this.prevTargetNode) {\n        if (!prevProps.disabled) {\n          this.unobserve(this.prevTargetNode);\n        }\n      }\n    }\n\n    return relatedPropsChanged;\n  };\n\n  ReactIntersectionObserver.prototype.componentDidUpdate = function (_, __, relatedPropsChanged) {\n    var targetNodeChanged = false; // check if we didn't unobserve previously due to a prop change\n\n    if (!relatedPropsChanged) {\n      targetNodeChanged = this.prevTargetNode !== this.targetNode; // check we have a previous node we want to unobserve\n\n      if (targetNodeChanged && this.prevTargetNode != null) {\n        this.unobserve(this.prevTargetNode);\n      }\n    }\n\n    if (relatedPropsChanged || targetNodeChanged) {\n      this.observe();\n    }\n  };\n\n  ReactIntersectionObserver.prototype.componentDidMount = function () {\n    this.observe();\n  };\n\n  ReactIntersectionObserver.prototype.componentWillUnmount = function () {\n    if (this.targetNode) {\n      this.unobserve(this.targetNode);\n    }\n  };\n\n  ReactIntersectionObserver.prototype.render = function () {\n    var children = this.props.children;\n    return children != null ? React.cloneElement(React.Children.only(children), {\n      ref: this.handleNode\n    }) : null;\n  };\n\n  ReactIntersectionObserver.displayName = 'IntersectionObserver';\n  return ReactIntersectionObserver;\n}(React.Component);\n\nexport default ReactIntersectionObserver;\nexport * from './types';","import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport { postStyle } from \"../lib/post-style\"\nimport Block from \"./block\"\nimport CommentBtn from \"./comment-btn\"\nimport IconBtn from \"./icon-btn\"\nimport LikeBtn from \"./like-btn\"\nimport Observer from '@researchgate/react-intersection-observer';\nimport { useEffect, useState } from \"react\"\nimport { getCommentCount, getLikeCount } from \"../lib/like\"\n\ninterface PostListProps {\n  data: PostData[];\n}\n\nexport default function PostList({ data }: PostListProps) {\n  return(\n    <div>\n      {data.map(item => <PostItem data={item} key={item.id} />)}\n    </div>\n  )\n}\n\nexport interface PostData {\n  html: string;\n  id: string;\n  excerpt: string;\n  frontmatter: {\n    title?: string | null;\n    description?: string | null;\n    type: 'article' | 'short';\n    url: string;\n    ctime: number;\n  }\n}\n\ninterface PostItemProps {\n  data: PostData;\n}\n\nfunction PostItem({ data }: PostItemProps) {\n  const [isObservered, setIsObservered] = useState(false);\n  const [likeCount, setLikeCount] = useState<number | null>(null);\n  const [commentCount, setCommentCount] = useState<number | null>(null);\n  const postPath = `/posts/${data.id}/`;\n\n  useEffect(() => {\n    if (isObservered) {\n      getLikeCount(postPath).then(count => {\n        setLikeCount(count);\n      });\n      getCommentCount(postPath).then(count => {\n        setCommentCount(count);\n      });\n    }\n  }, [isObservered])\n\n  return(\n    <Observer onChange={handleIntersection}>\n      <div css={css`\n        position: relative;\n        transition: 300ms;\n        opacity: ${isObservered? 1 : 0};\n        transform: translateY(${isObservered? 0 : \"100px\"});\n      `}>\n        <Block>\n          <div>\n            {data.frontmatter.title?\n              <Link to={postPath} css={styles.title}>\n                <h1>{data.frontmatter.title}</h1>\n              </Link>\n            : null}\n            <div\n              css={postStyle}\n              dangerouslySetInnerHTML={{__html: data.frontmatter.description? data.frontmatter.description : data.excerpt}}\n            />\n            <div css={styles.fbar}>\n              <div css={css`display: flex;`}>\n                <CommentBtn count={commentCount} />\n                <LikeBtn path={postPath} style={{marginLeft: 10}} count={likeCount} setCount={setLikeCount} />\n              </div>\n              <Link to={postPath} css={css`text-decoration: none; -webkit-tap-highlight-color: transparent;`}>\n                <IconBtn title=\"FULL TEXT\" />\n              </Link>\n            </div>\n          </div>\n        </Block>\n      </div>\n    </Observer>\n  )\n\n  function handleIntersection(event) {\n    if (!isObservered && event.isIntersecting) {\n      setIsObservered(event.isIntersecting)\n    }\n  }\n}\n\nconst styles = {\n  title: css`\n    color: inherit;\n    text-decoration: none;\n    :hover {\n      text-decoration: underline;\n    }\n    h1 {\n      font-size: 35px;\n      font-weight: bold;\n      margin: 0 0 15px 0;\n    }\n  `,\n  fbar: css`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin-top: 20px;\n  `\n}","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport { Title } from \"react-head\";\nimport { graphql } from 'gatsby';\nimport PageTransition from 'gatsby-plugin-page-transitions';\n\nexport default function IndexPage ({ data }) {\n  return (\n    <PageTransition\n      transitionTime={500}\n    >\n      <Layout>\n        <Title>{data.site.siteMetadata.title}</Title>\n        <PostList data={data.allMarkdownRemark.nodes} />\n      </Layout>\n    </PageTransition>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {fields: frontmatter___ctime, order: DESC}) {\n      nodes {\n        html\n        id\n        excerpt(truncate: true, pruneLength: 500)\n        frontmatter {\n          title\n          description\n          type\n          ctime\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}