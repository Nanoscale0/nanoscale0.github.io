{"version":3,"sources":["webpack:///./src/components/nav.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/lib/like.ts","webpack:///./src/components/block.tsx","webpack:///./src/components/comment-btn.tsx","webpack:///./src/lib/post-style.ts","webpack:///./src/components/icon-btn.tsx","webpack:///./src/components/like-btn.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/lib/color.ts"],"names":["Nav","locationProps","NavInner","pathname","location","css","styles","nav","NavItem","icon","to","select","navItem","dcr","Layout","children","colorScheme","back","fore","acr","content","name","layout","main","AV","init","appId","appKey","likeDemo","Object","extend","getLikeCount","url","Query","equalTo","find","then","results","length","attributes","num","catch","error","console","addLikeCount","objId","id","countNUM","increase","createWithoutData","increment","save","log","countURL","result","getCommentCount","count","Block","block","CommentBtn","path","style","useState","commentCount","setCommentCount","useEffect","title","toString","postStyle","lcr","IconBtn","onClick","btn","String","fromCharCode","LikeBtn","likeCount","setLikeCount","liked","setLiked","prevLike","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","key","Color","color","alpha","red","green","blue","Array","isArray","this","startsWith","w","substring","indexOf","split","map","item","parseInt","replace","slice","Constructor","protoProps","staticProps","prototype","rgbaStr","hex"],"mappings":"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","file":"16146ff8c03dda54ebd1d68738d76d406c171082-f411b63345b15ab1bf62.js","sourcesContent":["import { css } from \"@emotion/react\"\nimport { colorScheme, dcr } from \"../lib/color\"\nimport { Location } from '@reach/router';\nimport { Link } from \"gatsby\";\n\nexport default function Nav() {\n  return(\n    <Location>\n      {locationProps => <NavInner {...locationProps} />}\n    </Location>\n  )\n}\n\nfunction NavInner({ location }) {\n  const pathname = location.pathname;\n\n  return(\n    <nav css={styles.nav}>\n      <NavItem icon=\"&#xe64d;\" to=\"/\" select={pathname === \"/\"} />\n      <NavItem icon=\"&#xe64a;\" to=\"#\" />\n      <NavItem icon=\"&#xe63d;\" to=\"#\" />\n    </nav>\n  )\n}\n\ninterface NavItemProps {\n  icon: string;\n  to: string;\n  select?: boolean;\n}\n\nfunction NavItem({ icon, to, select }: NavItemProps) {\n  return(\n    <Link\n      to={to}\n      css={[styles.navItem, css`\n        opacity: ${select? 1 : 0.3};\n      `]}\n    >\n      {icon}\n    </Link>\n  )\n}\n\nconst styles = {\n  nav: css`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: fixed;\n    transform: translateZ(0);\n    top: 30px;\n    width: 50px;\n    padding: 10px 0;\n    background: ${dcr(0.05)};\n    border-radius: 8px;\n  `,\n  navItem: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 25px;\n    width: 100%;\n    height: 55px;\n    color: inherit;\n    user-select: none;\n    text-decoration: none;\n    font-family: 'iconfont';\n    transition: 200ms;\n    :hover {\n      opacity: 1;\n    }\n    :active {\n      transform: scale(0.9);\n    }\n  `\n}","import React, { ReactNode } from \"react\";\nimport { Global, css } from '@emotion/react'\nimport Nav from \"./nav\";\nimport { acr, colorScheme, dcr } from \"../lib/color\";\nimport '../assets/iconfont/iconfont.css';\nimport { Meta } from \"react-head\";\n\ninterface LayoutProps {\n  children: ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return(\n    <>\n      <Global\n        styles={css`\n          body {\n            margin: 0;\n            background: ${colorScheme.back};\n            color: ${colorScheme.fore};\n            font-family: Helvetica, Arial, sans-serif;\n          }\n          ::selection {\n            background-color: ${acr(0.99, colorScheme.fore)};\n            color: ${colorScheme.back};\n          }\n        `}\n      />\n      <Meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\" />\n      <div css={styles.layout}>\n        <Nav />\n        <main css={styles.main}>\n          {children}\n        </main>\n      </div>\n    </>\n  )\n}\n\nconst styles = {\n  layout: css`\n    display: block;\n    margin: 0 auto;\n    max-width: 900px;\n  `,\n  main: css`\n    margin-left: 80px;\n  `\n}","// const AV = (window as any).AV;\n\ndeclare var AV;\n\nAV.init({\n  appId: \"xKR2tyyilhkTVKN0m228niWM-MdYXbMMI\",\n  appKey: \"QwHrti9HBOiY8vJM62lAA1xR\"\n});\n\nconst LikeCount = AV.Object.extend(\"likeCount\");\nconst likeDemo = new LikeCount();\n\nexport function getLikeCount(url: string) {\n  const getCounter = new AV.Query(\"likeCount\");\n  const getCount = getCounter.equalTo(\"url\", url);\n\n  return getCount.find()\n    .then(results => {\n      const count: number = results.length >= 1 ? (results[0] as any).attributes.num : 0;\n      return count;\n    })\n    .catch(error => {\n      console.error(error);\n      return null;\n    })\n}\n\nexport function addLikeCount(url: string) {\n  const getCounter = new AV.Query(\"likeCount\");\n  const getCount = getCounter.equalTo(\"url\", url);\n\n  getCount.find().then(results => {\n    if (results.length >= 1) {  //成功返回数据（已创建对象，更新 num 数据）\n      let countNUM = (results[0] as any).attributes.num;  //获取云端计数\n      let objId = results[0].id;  //获取当前页面 id\n      countNUM++;  //本地计数++\n\n      const increase = AV.Object.createWithoutData('likeCount', objId);  //获取当前页面 id 的云端对象\n      increase.increment('num', 1);  //使用 increment 函数更新云端对象的 num 属性\n      //储存（更新）对象到云端\n      increase.save().then(increase => {\n        // console.log(\"Update Successfully.\");\n      }, error => {\n        console.log(\"Update Error.\")\n      })\n    } else {  //返回空数据（未创建对象，第一次创建num+url）\n      let countNUM = 0;  //初始化本地计数\n      let countURL = url;  //获取当前 url\n      countNUM++;  //本地计数++\n      //储存 num（本地计数） 和 url（当前url） 对象到云端\n      likeDemo.save({\n        'num': countNUM,\n        'url': countURL\n      }).then(result => {\n        // console.log(\"Save Successfully.\");\n      }, error => {\n        console.log(\"Save Error.\")\n      })\n    }\n  })\n}\n\nexport function getCommentCount(url: string) {\n  const getCounter = new AV.Query(\"Comment\");\n  const getCount = getCounter.equalTo(\"url\", url);\n\n  return getCount.count()\n    .then(results => {\n      return results;\n    })\n    .catch(error => {\n      console.error(error);\n      return null;\n    })\n}","import { css } from \"@emotion/react\"\nimport { ReactNode } from \"react\"\nimport { dcr } from \"../lib/color\"\n\ninterface BlockProps {\n  children?: ReactNode;\n}\n\nexport default function Block({ children }: BlockProps) {\n  return(\n    <div css={styles.block}>\n      {children}\n    </div>\n  )\n}\n\nconst styles = {\n  block: css`\n    border-radius: 8px;\n    margin: 30px 0;\n    padding: 25px;\n    background: ${dcr(0.05)};\n  `\n}","import { CSSProperties, useEffect, useState } from \"react\";\nimport { getCommentCount } from \"../lib/like\";\nimport IconBtn from \"./icon-btn\";\n\ninterface CommentBtnProps {\n  path: string;\n  style?: CSSProperties;\n}\n\nexport default function CommentBtn({ path, style }: CommentBtnProps) {\n  const [commentCount, setCommentCount] = useState<number | null>(null);\n\n  useEffect(() => {\n    getCommentCount(path).then(count => {\n      setCommentCount(count);\n    });\n  }, [])\n\n  return(\n    <IconBtn title={commentCount? commentCount.toString() : \"Comment\"} style={style} icon=\"&#xe641;\" />\n  )\n}","import { css } from \"@emotion/react\";\nimport { lcr } from \"./color\";\n\nexport const postStyle = css`\n  font-size: 20px;\n  font-weight: 300;\n  a {\n    color: inherit;\n  }\n  pre {\n    background: ${lcr(0.05)};\n    padding: 20px;\n    border-radius: 8px;\n    font-size: 0.8em;\n    overflow-x: auto;\n  }\n  *:last-child {\n    margin-bottom: 0;\n  }\n`","import { css, Theme } from \"@emotion/react\";\nimport { Interpolation } from '@emotion/serialize';\nimport { CSSProperties, MouseEvent } from \"react\";\nimport { colorScheme, lcr } from \"../lib/color\";\n\ninterface IconBtnProps {\n  title: string;\n  icon?: string | number;\n  style?: CSSProperties;\n  onClick?: (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => void;\n}\n\nexport default function IconBtn({ title, icon, style, onClick }: IconBtnProps) {\n  return(\n    <button css={styles.btn} style={style} onClick={onClick}>\n      {icon? <div css={styles.icon}>{\n        typeof icon === 'number'? String.fromCharCode(icon) : icon\n      }</div> : null}\n      {title}\n    </button>\n  )\n}\n\nconst styles = {\n  btn: css`\n    display: flex;\n    align-items: center;\n    border: none;\n    background: ${lcr(0.1)};\n    color: ${colorScheme.fore};\n    padding: 0 15px;\n    height: 35px;\n    border-radius: 20px;\n    outline: none;\n    font-size: 15px;\n    font-weight: bold;\n    transition: 100ms;\n    cursor: pointer;\n    :hover {\n      background: ${lcr(0.2)};\n    }\n    :active {\n      background: ${lcr(0.05)};\n    }\n  `,\n  icon: css`\n    font-family: 'iconfont';\n    font-size: 20px;\n    margin-right: 8px;\n  `\n}","import { CSSProperties, useEffect, useState } from \"react\";\nimport { addLikeCount, getLikeCount } from \"../lib/like\";\nimport IconBtn from \"./icon-btn\";\n\ninterface LikeBtnProps {\n  path: string;\n  style?: CSSProperties;\n}\n\nexport default function LikeBtn({ path, style }: LikeBtnProps) {\n  const [likeCount, setLikeCount] = useState<number | null>(null);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    getLikeCount(path).then(count => {\n      setLikeCount(count);\n    });\n  }, [])\n\n  return(\n    <IconBtn title={likeCount? likeCount.toString() : \"Like\"} style={style} icon={liked? 0xe601 : 0xe648} onClick={likeClick} />\n  )\n\n  function likeClick() {\n    if (!liked) {\n      addLikeCount(path);\n      setLiked(true);\n      setLikeCount(prevLike => {\n        if (prevLike === null) {\n          return 1;\n        } else {\n          return prevLike + 1;\n        }\n      });\n    }\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export const colorScheme = {\r\n  back: \"#1D1E7D\",\r\n  fore: \"#F52277\"\r\n}\r\n\r\nexport default class Color {\r\n  red = 0;\r\n  green = 0;\r\n  blue = 0;\r\n  alpha = 1;\r\n\r\n  constructor(color: string | number[], alpha?: number) {\r\n    if (Array.isArray(color)) {\r\n      this.red = color[0];\r\n      this.green = color[1];\r\n      this.blue = color[2];\r\n      if (color.length > 3) this.alpha = color[3];\r\n    } else if (color.startsWith(\"rgb\")) {\r\n      let w = color.substring(color.indexOf(\"(\") + 1 ,color.indexOf(\")\")).split(\",\").map(item => parseInt(item));\r\n      this.red = w[0];\r\n      this.green = w[1];\r\n      this.blue = w[2];\r\n      if (w.length > 3) this.alpha = w[3];\r\n    } else {\r\n      let w = color.replace(\"#\", \"\");\r\n      this.red = parseInt('0x' + w.slice(0, 2));\r\n      this.green = parseInt('0x' + w.slice(2, 4));\r\n      this.blue = parseInt('0x' + w.slice(4, 6));\r\n    }\r\n    if (alpha) this.alpha = alpha;\r\n  }\r\n\r\n  get hex() {\r\n    let hexStr = \"#\" + ((1 << 24) + (this.red << 16) + (this.green << 8) + this.blue).toString(16).slice(1);\r\n    return hexStr;\r\n  }\r\n\r\n  get rgbStr() {\r\n    return `rgb(${this.red}, ${this.green}, ${this.blue})`\r\n  }\r\n\r\n  get rgbaStr() {\r\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`\r\n  }\r\n\r\n  get rgbArray() {\r\n    return [this.red, this.green, this.blue]\r\n  }\r\n}\r\n\r\nfunction getColorDistance(colorA: Color, colorB: Color) {\r\n  let colorARGB = colorA.rgbArray, colorBRGB = colorB.rgbArray;\r\n  let distance = 0;\r\n\r\n  for (let n = 0; n < colorARGB.length; n++) {\r\n    distance += Math.pow(colorARGB[n] - colorBRGB[n], 2);\r\n  }\r\n\r\n  return Math.sqrt(distance);\r\n}\r\n\r\nfunction getColorDistancesOfArray(colors: Color[]) {\r\n  type distance = distanceChild[];\r\n  type distanceChild = number[];\r\n\r\n  let distances: distance = [];\r\n\r\n  for (let c1 = 0; c1 < colors.length; c1++) {\r\n    distances[c1] = [];\r\n    for (let c2 = 0; c2 < colors.length; c2++) {\r\n      distances[c1][c2] = getColorDistance(colors[c1], colors[c2]);\r\n    }\r\n  }\r\n\r\n  return distances;\r\n}\r\n\r\nexport function selectThreeColors(colors: Color[]) {\r\n  let colorDistances = getColorDistancesOfArray(colors);\r\n  let color2Index = 0, color3Index = 1;\r\n\r\n  let color1 = colors[0];\r\n\r\n  for (let i = 0; i < colors.length; i++) {\r\n    if (colorDistances[0][i] > colorDistances[0][color2Index]) {\r\n      color2Index = i;\r\n    }\r\n  }\r\n\r\n  let color2 = colors[color2Index];\r\n  color3Index = color2Index + 1;\r\n  if (color3Index >= colors.length) {\r\n    color3Index = 1;\r\n  }\r\n\r\n  for (let i = 1; i < colors.length; i++) {\r\n    if (i !== color2Index && colorDistances[0][i] > colorDistances[0][color3Index]) {\r\n      color3Index = i;\r\n    }\r\n  }\r\n\r\n  let color3 = colors[color3Index];\r\n\r\n  return [color1, color2, color3];\r\n}\r\n\r\n/**\r\n * return \"rgba(0, 0, 0, alpha)\"\r\n * @param alpha \r\n */\r\n\r\nexport function dcr(alpha: number) {\r\n  let color = new Color(\"#000000\", alpha);\r\n  return color.rgbaStr;\r\n}\r\n\r\n/**\r\n * return \"rgba(255, 255, 255, alpha)\"\r\n * @param alpha \r\n */\r\n\r\nexport function lcr(alpha: number) {\r\n  let color = new Color(\"#FFFFFF\", alpha);\r\n  return color.rgbaStr;\r\n}\r\n\r\nexport function acr(alpha: number, hex: string) {\r\n  let color = new Color(hex, alpha);\r\n  return color.rgbaStr;\r\n}"],"sourceRoot":""}