{"version":3,"sources":["webpack:///./src/components/nav.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/block.tsx","webpack:///./src/lib/post-style.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/lib/color.ts"],"names":["Nav","locationProps","NavInner","pathname","location","css","styles","nav","NavItem","icon","to","select","navItem","dcr","Layout","children","colorScheme","back","fore","acr","layout","main","Block","block","postStyle","lcr","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Color","color","alpha","red","green","blue","Array","isArray","this","startsWith","w","substring","indexOf","split","map","item","parseInt","replace","slice","Constructor","protoProps","staticProps","toString","prototype","rgbaStr","hex"],"mappings":"wMAKe,SAASA,IACtB,OACE,YAAC,WAAD,MACG,SAAAC,GAAa,OAAI,YAACC,EAAaD,MAKtC,SAASC,EAAT,GAAgC,IACxBC,EADwB,EAAZC,SACQD,SAE1B,OACE,mBAAKE,IAAKC,EAAOC,KACf,YAACC,EAAD,CAASC,KAAK,IAAWC,GAAG,IAAIC,OAAqB,MAAbR,IACxC,YAACK,EAAD,CAASC,KAAK,IAAWC,GAAG,MAC5B,YAACF,EAAD,CAASC,KAAK,IAAWC,GAAG,OAWlC,SAASF,EAAT,GAAqD,IAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,OAC3B,OACE,YAAC,IAAD,CACED,GAAIA,EACJL,IAAG,CAAGC,EAAOM,QAASP,YAAnB,WACUM,EAAQ,EAAI,GADtB,gBAIFF,GAKP,IAAMH,EAAS,CACbC,IAAKF,YAAF,8IASaQ,YAAI,KATjB,0BAYHD,QAAS,CAAF,oQ,UC/CM,SAASE,EAAT,GAA2C,IAAzBC,EAAyB,EAAzBA,SAC/B,OACE,8BACE,YAAC,IAAD,CACET,OAAQD,YAAF,4BAGYW,IAAYC,KAHxB,UAIOD,IAAYE,KAJnB,yEAQkBC,YAAI,IAAMH,IAAYE,MARxC,UASOF,IAAYC,KATnB,WAaR,mBAAKZ,IAAKC,EAAOc,QACf,YAACpB,EAAD,MACA,oBAAMK,IAAKC,EAAOe,MACfN,KAOX,IAAMT,EAAS,CACbc,OAAQ,CAAF,qEAKNC,KAAM,CAAF,4C,kCC3CN,8DAQe,SAASC,EAAT,GAAyC,IAAxBP,EAAwB,EAAxBA,SAC9B,OACE,mBAAKV,IAAKC,EAAOiB,OACdR,GAKP,IAAMT,EAAS,CACbiB,MAAOlB,YAAF,2DAIWQ,YAAI,KAJf,U,kCCjBP,8DAGaW,EAAYnB,YAAH,kEAOJoB,YAAI,KAPA,uG,yDCHtB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,I,wICN3C,IAAMf,EAAc,CACzBC,KAAM,UACNC,KAAM,WAGaoB,E,WAMnB,WAAYC,EAA0BC,GACpC,GADoD,KALtDC,IAAM,EAKgD,KAJtDC,MAAQ,EAI8C,KAHtDC,KAAO,EAG+C,KAFtDH,MAAQ,EAGFI,MAAMC,QAAQN,GAChBO,KAAKL,IAAMF,EAAM,GACjBO,KAAKJ,MAAQH,EAAM,GACnBO,KAAKH,KAAOJ,EAAM,GACdA,EAAMT,OAAS,IAAGgB,KAAKN,MAAQD,EAAM,SACpC,GAAIA,EAAMQ,WAAW,OAAQ,CAClC,IAAIC,EAAIT,EAAMU,UAAUV,EAAMW,QAAQ,KAAO,EAAGX,EAAMW,QAAQ,MAAMC,MAAM,KAAKC,KAAI,SAAAC,GAAI,OAAIC,SAASD,MACpGP,KAAKL,IAAMO,EAAE,GACbF,KAAKJ,MAAQM,EAAE,GACfF,KAAKH,KAAOK,EAAE,GACVA,EAAElB,OAAS,IAAGgB,KAAKN,MAAQQ,EAAE,QAC5B,CACL,IAAIA,EAAIT,EAAMgB,QAAQ,IAAK,IAC3BT,KAAKL,IAAMa,SAAS,KAAON,EAAEQ,MAAM,EAAG,IACtCV,KAAKJ,MAAQY,SAAS,KAAON,EAAEQ,MAAM,EAAG,IACxCV,KAAKH,KAAOW,SAAS,KAAON,EAAEQ,MAAM,EAAG,IAErChB,IAAOM,KAAKN,MAAQA,GDnBb,IAAsBiB,EAAaC,EAAYC,E,OAAzBF,E,GAAaC,E,2BCwB9C,MADa,MAAQ,GAAK,KAAOZ,KAAKL,KAAO,KAAOK,KAAKJ,OAAS,GAAKI,KAAKH,MAAMiB,SAAS,IAAIJ,MAAM,K,6BAKrG,aAAcV,KAAKL,IAAnB,KAA2BK,KAAKJ,MAAhC,KAA0CI,KAAKH,KAA/C,M,8BAIA,cAAeG,KAAKL,IAApB,KAA4BK,KAAKJ,MAAjC,KAA2CI,KAAKH,KAAhD,KAAyDG,KAAKN,MAA9D,M,+BAIA,MAAO,CAACM,KAAKL,IAAKK,KAAKJ,MAAOI,KAAKH,WDnCrBjB,EAAkB+B,EAAYI,UAAWH,GACrDC,GAAajC,EAAkB+B,EAAaE,G,KCmG3C,SAAS9C,EAAI2B,GAElB,OADY,IAAIF,EAAM,UAAWE,GACpBsB,QAQR,SAASrC,EAAIe,GAElB,OADY,IAAIF,EAAM,UAAWE,GACpBsB,QAGR,SAAS3C,EAAIqB,EAAeuB,GAEjC,OADY,IAAIzB,EAAMyB,EAAKvB,GACdsB","file":"16146ff8c03dda54ebd1d68738d76d406c171082-a74ad34ccbe6b88cb046.js","sourcesContent":["import { css } from \"@emotion/react\"\nimport { colorScheme, dcr } from \"../lib/color\"\nimport { Location } from '@reach/router';\nimport { Link } from \"gatsby\";\n\nexport default function Nav() {\n  return(\n    <Location>\n      {locationProps => <NavInner {...locationProps} />}\n    </Location>\n  )\n}\n\nfunction NavInner({ location }) {\n  const pathname = location.pathname;\n\n  return(\n    <nav css={styles.nav}>\n      <NavItem icon=\"&#xe64d;\" to=\"/\" select={pathname === \"/\"} />\n      <NavItem icon=\"&#xe64a;\" to=\"#\" />\n      <NavItem icon=\"&#xe63d;\" to=\"#\" />\n    </nav>\n  )\n}\n\ninterface NavItemProps {\n  icon: string;\n  to: string;\n  select?: boolean;\n}\n\nfunction NavItem({ icon, to, select }: NavItemProps) {\n  return(\n    <Link\n      to={to}\n      css={[styles.navItem, css`\n        opacity: ${select? 1 : 0.3};\n      `]}\n    >\n      {icon}\n    </Link>\n  )\n}\n\nconst styles = {\n  nav: css`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: fixed;\n    transform: translateZ(0);\n    top: 30px;\n    width: 50px;\n    padding: 10px 0;\n    background: ${dcr(0.05)};\n    border-radius: 8px;\n  `,\n  navItem: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 25px;\n    width: 100%;\n    height: 55px;\n    color: inherit;\n    user-select: none;\n    text-decoration: none;\n    font-family: 'iconfont';\n    transition: 200ms;\n    :hover {\n      opacity: 1;\n    }\n    :active {\n      transform: scale(0.9);\n    }\n  `\n}","import React, { ReactNode } from \"react\";\nimport { Global, css } from '@emotion/react'\nimport Nav from \"./nav\";\nimport { acr, colorScheme, dcr } from \"../lib/color\";\nimport '../assets/iconfont/iconfont.css';\n\ninterface LayoutProps {\n  children: ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return(\n    <>\n      <Global\n        styles={css`\n          body {\n            margin: 0;\n            background: ${colorScheme.back};\n            color: ${colorScheme.fore};\n            font-family: Helvetica, Arial, sans-serif;\n          }\n          ::selection {\n            background-color: ${acr(0.99, colorScheme.fore)};\n            color: ${colorScheme.back};\n          }\n        `}\n      />\n      <div css={styles.layout}>\n        <Nav />\n        <main css={styles.main}>\n          {children}\n        </main>\n      </div>\n    </>\n  )\n}\n\nconst styles = {\n  layout: css`\n    display: block;\n    margin: 0 auto;\n    max-width: 900px;\n  `,\n  main: css`\n    margin-left: 80px;\n  `\n}","import { css } from \"@emotion/react\"\nimport { ReactNode } from \"react\"\nimport { dcr } from \"../lib/color\"\n\ninterface BlockProps {\n  children?: ReactNode;\n}\n\nexport default function Block({ children }: BlockProps) {\n  return(\n    <div css={styles.block}>\n      {children}\n    </div>\n  )\n}\n\nconst styles = {\n  block: css`\n    border-radius: 8px;\n    margin: 30px 0;\n    padding: 25px;\n    background: ${dcr(0.05)};\n  `\n}","import { css } from \"@emotion/react\";\nimport { lcr } from \"./color\";\n\nexport const postStyle = css`\n  font-size: 20px;\n  font-weight: 300;\n  a {\n    color: inherit;\n  }\n  pre {\n    background: ${lcr(0.05)};\n    padding: 20px;\n    border-radius: 8px;\n    font-size: 0.8em;\n    overflow-x: auto;\n  }\n  *:last-child {\n    margin-bottom: 0;\n  }\n`","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export const colorScheme = {\r\n  back: \"#1D1E7D\",\r\n  fore: \"#F52277\"\r\n}\r\n\r\nexport default class Color {\r\n  red = 0;\r\n  green = 0;\r\n  blue = 0;\r\n  alpha = 1;\r\n\r\n  constructor(color: string | number[], alpha?: number) {\r\n    if (Array.isArray(color)) {\r\n      this.red = color[0];\r\n      this.green = color[1];\r\n      this.blue = color[2];\r\n      if (color.length > 3) this.alpha = color[3];\r\n    } else if (color.startsWith(\"rgb\")) {\r\n      let w = color.substring(color.indexOf(\"(\") + 1 ,color.indexOf(\")\")).split(\",\").map(item => parseInt(item));\r\n      this.red = w[0];\r\n      this.green = w[1];\r\n      this.blue = w[2];\r\n      if (w.length > 3) this.alpha = w[3];\r\n    } else {\r\n      let w = color.replace(\"#\", \"\");\r\n      this.red = parseInt('0x' + w.slice(0, 2));\r\n      this.green = parseInt('0x' + w.slice(2, 4));\r\n      this.blue = parseInt('0x' + w.slice(4, 6));\r\n    }\r\n    if (alpha) this.alpha = alpha;\r\n  }\r\n\r\n  get hex() {\r\n    let hexStr = \"#\" + ((1 << 24) + (this.red << 16) + (this.green << 8) + this.blue).toString(16).slice(1);\r\n    return hexStr;\r\n  }\r\n\r\n  get rgbStr() {\r\n    return `rgb(${this.red}, ${this.green}, ${this.blue})`\r\n  }\r\n\r\n  get rgbaStr() {\r\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`\r\n  }\r\n\r\n  get rgbArray() {\r\n    return [this.red, this.green, this.blue]\r\n  }\r\n}\r\n\r\nfunction getColorDistance(colorA: Color, colorB: Color) {\r\n  let colorARGB = colorA.rgbArray, colorBRGB = colorB.rgbArray;\r\n  let distance = 0;\r\n\r\n  for (let n = 0; n < colorARGB.length; n++) {\r\n    distance += Math.pow(colorARGB[n] - colorBRGB[n], 2);\r\n  }\r\n\r\n  return Math.sqrt(distance);\r\n}\r\n\r\nfunction getColorDistancesOfArray(colors: Color[]) {\r\n  type distance = distanceChild[];\r\n  type distanceChild = number[];\r\n\r\n  let distances: distance = [];\r\n\r\n  for (let c1 = 0; c1 < colors.length; c1++) {\r\n    distances[c1] = [];\r\n    for (let c2 = 0; c2 < colors.length; c2++) {\r\n      distances[c1][c2] = getColorDistance(colors[c1], colors[c2]);\r\n    }\r\n  }\r\n\r\n  return distances;\r\n}\r\n\r\nexport function selectThreeColors(colors: Color[]) {\r\n  let colorDistances = getColorDistancesOfArray(colors);\r\n  let color2Index = 0, color3Index = 1;\r\n\r\n  let color1 = colors[0];\r\n\r\n  for (let i = 0; i < colors.length; i++) {\r\n    if (colorDistances[0][i] > colorDistances[0][color2Index]) {\r\n      color2Index = i;\r\n    }\r\n  }\r\n\r\n  let color2 = colors[color2Index];\r\n  color3Index = color2Index + 1;\r\n  if (color3Index >= colors.length) {\r\n    color3Index = 1;\r\n  }\r\n\r\n  for (let i = 1; i < colors.length; i++) {\r\n    if (i !== color2Index && colorDistances[0][i] > colorDistances[0][color3Index]) {\r\n      color3Index = i;\r\n    }\r\n  }\r\n\r\n  let color3 = colors[color3Index];\r\n\r\n  return [color1, color2, color3];\r\n}\r\n\r\n/**\r\n * return \"rgba(0, 0, 0, alpha)\"\r\n * @param alpha \r\n */\r\n\r\nexport function dcr(alpha: number) {\r\n  let color = new Color(\"#000000\", alpha);\r\n  return color.rgbaStr;\r\n}\r\n\r\n/**\r\n * return \"rgba(255, 255, 255, alpha)\"\r\n * @param alpha \r\n */\r\n\r\nexport function lcr(alpha: number) {\r\n  let color = new Color(\"#FFFFFF\", alpha);\r\n  return color.rgbaStr;\r\n}\r\n\r\nexport function acr(alpha: number, hex: string) {\r\n  let color = new Color(hex, alpha);\r\n  return color.rgbaStr;\r\n}"],"sourceRoot":""}